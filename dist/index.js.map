{"version":3,"sources":["webpack://reactSpectre/webpack/universalModuleDefinition","webpack://reactSpectre/webpack/bootstrap","webpack://reactSpectre/external \"react\"","webpack://reactSpectre/./node_modules/classnames/index.js","webpack://reactSpectre/external \"date-fns\"","webpack://reactSpectre/./node_modules/ramda/dist/ramda.js","webpack://reactSpectre/./node_modules/tslib/tslib.es6.js","webpack://reactSpectre/./src/elements/Icon/Icon.tsx","webpack://reactSpectre/./src/utilities/attr/attr.ts","webpack://reactSpectre/./src/components/Menu/util.ts","webpack://reactSpectre/./src/utilities/Divider/Divider.tsx","webpack://reactSpectre/./src/components/Menu/MenuBadge.tsx","webpack://reactSpectre/./src/components/Menu/MenuItem.tsx","webpack://reactSpectre/./src/components/Menu/Menu.tsx","webpack://reactSpectre/./src/components/Accordion/AccordionBody.tsx","webpack://reactSpectre/./src/components/Accordion/util.ts","webpack://reactSpectre/./src/components/Accordion/AccordionItem.tsx","webpack://reactSpectre/./src/components/Accordion/Accordion.tsx","webpack://reactSpectre/./src/components/Avatar/AvatarIcon.tsx","webpack://reactSpectre/./src/components/Avatar/AvatarPresence.tsx","webpack://reactSpectre/./src/components/Avatar/Avatar.tsx","webpack://reactSpectre/./src/elements/Button/ButtonWrapper.tsx","webpack://reactSpectre/./src/elements/Button/util.ts","webpack://reactSpectre/./src/elements/Button/Button.tsx","webpack://reactSpectre/./src/elements/Button/ButtonGroup.tsx","webpack://reactSpectre/./src/components/Bar/BarItem.tsx","webpack://reactSpectre/./src/components/Bar/Bar.tsx","webpack://reactSpectre/./src/components/Breadcrumb/BreadcrumbItem.tsx","webpack://reactSpectre/./src/interfaces.ts","webpack://reactSpectre/./src/components/Breadcrumb/Breadcrumb.tsx","webpack://reactSpectre/./src/components/Breadcrumb/util.ts","webpack://reactSpectre/./src/components/Card/CardBody.tsx","webpack://reactSpectre/./src/components/Card/CardFooter.tsx","webpack://reactSpectre/./src/components/Card/CardHeader.tsx","webpack://reactSpectre/./src/components/Card/CardImage.tsx","webpack://reactSpectre/./src/components/Card/CardSubtitle.tsx","webpack://reactSpectre/./src/components/Card/CardTitle.tsx","webpack://reactSpectre/./src/components/Card/Card.tsx","webpack://reactSpectre/./src/components/Card/util.ts","webpack://reactSpectre/./src/components/Chip/ChipWrapper.tsx","webpack://reactSpectre/./src/components/Chip/Chip.tsx","webpack://reactSpectre/./src/components/Chip/util.ts","webpack://reactSpectre/./src/components/Dropdown/Dropdown.tsx","webpack://reactSpectre/./src/components/Dropdown/util.ts","webpack://reactSpectre/./src/components/Empty/EmptyAction.tsx","webpack://reactSpectre/./src/components/Empty/EmptyIcon.tsx","webpack://reactSpectre/./src/components/Empty/EmptySubtitle.tsx","webpack://reactSpectre/./src/components/Empty/EmptyTitle.tsx","webpack://reactSpectre/./src/components/Empty/Empty.tsx","webpack://reactSpectre/./src/components/Modal/ModalBody.tsx","webpack://reactSpectre/./src/components/Modal/ModalContainer.tsx","webpack://reactSpectre/./src/components/Modal/ModalFooter.tsx","webpack://reactSpectre/./src/components/Modal/ModalHeader.tsx","webpack://reactSpectre/./src/components/Modal/ModalOverlay.tsx","webpack://reactSpectre/./src/components/Modal/ModalTitle.tsx","webpack://reactSpectre/./src/components/Modal/Modal.tsx","webpack://reactSpectre/./src/components/Modal/util.ts","webpack://reactSpectre/./src/components/Nav/NavItem.tsx","webpack://reactSpectre/./src/components/Nav/Nav.tsx","webpack://reactSpectre/./src/components/Nav/util.ts","webpack://reactSpectre/./src/components/Pagination/PaginationItem.tsx","webpack://reactSpectre/./src/components/Pagination/PaginationTitleItem.tsx","webpack://reactSpectre/./src/components/Pagination/Pagination.tsx","webpack://reactSpectre/./src/components/Pagination/util.ts","webpack://reactSpectre/./src/components/Panel/PanelBody.tsx","webpack://reactSpectre/./src/components/Panel/PanelFooter.tsx","webpack://reactSpectre/./src/components/Panel/PanelHeader.tsx","webpack://reactSpectre/./src/components/Panel/PanelNav.tsx","webpack://reactSpectre/./src/components/Panel/PanelTitle.tsx","webpack://reactSpectre/./src/components/Panel/Panel.tsx","webpack://reactSpectre/./src/components/Popover/PopoverContainer.tsx","webpack://reactSpectre/./src/components/Popover/Popover.tsx","webpack://reactSpectre/./src/components/Popover/util.ts","webpack://reactSpectre/./src/components/Step/StepItem.tsx","webpack://reactSpectre/./src/components/Step/Step.tsx","webpack://reactSpectre/./src/components/Step/util.ts","webpack://reactSpectre/./src/components/Tab/TabAction.tsx","webpack://reactSpectre/./src/components/Tab/TabItem.tsx","webpack://reactSpectre/./src/components/Tab/Tab.tsx","webpack://reactSpectre/./src/components/Tab/util.ts","webpack://reactSpectre/./src/components/Tile/TileAction.tsx","webpack://reactSpectre/./src/components/Tile/TileContent.tsx","webpack://reactSpectre/./src/components/Tile/TileIcon.tsx","webpack://reactSpectre/./src/components/Tile/TileSubtitle.tsx","webpack://reactSpectre/./src/components/Tile/TileTitle.tsx","webpack://reactSpectre/./src/components/Tile/Tile.tsx","webpack://reactSpectre/./src/components/Tile/util.ts","webpack://reactSpectre/./src/components/Toast/Toast.tsx","webpack://reactSpectre/./src/elements/Table/interfaces.ts","webpack://reactSpectre/./src/components/Toast/util.ts","webpack://reactSpectre/./src/components/Tooltip/Tooltip.tsx","webpack://reactSpectre/./src/elements/Form/Form.tsx","webpack://reactSpectre/./src/elements/Form/FormIcon.tsx","webpack://reactSpectre/./src/elements/Form/FormCheckbox.tsx","webpack://reactSpectre/./src/elements/Form/FormGroup.tsx","webpack://reactSpectre/./src/elements/Form/FormInput.tsx","webpack://reactSpectre/./src/elements/Form/FormInputHint.tsx","webpack://reactSpectre/./src/elements/Form/FormLabel.tsx","webpack://reactSpectre/./src/elements/Form/FormRadio.tsx","webpack://reactSpectre/./src/elements/Form/FormSelect.tsx","webpack://reactSpectre/./src/elements/Form/FormSwitch.tsx","webpack://reactSpectre/./src/elements/Form/FormTextarea.tsx","webpack://reactSpectre/./src/elements/Form/HasIcon.tsx","webpack://reactSpectre/./src/elements/Form/InputGroup.tsx","webpack://reactSpectre/./src/elements/Form/InputGroupAddon.tsx","webpack://reactSpectre/./src/elements/Label/Label.tsx","webpack://reactSpectre/./src/elements/Table/util.ts","webpack://reactSpectre/./src/elements/Table/TableBody.tsx","webpack://reactSpectre/./src/elements/Table/TableData.tsx","webpack://reactSpectre/./src/elements/Table/TableHeader.tsx","webpack://reactSpectre/./src/elements/Table/TableHeading.tsx","webpack://reactSpectre/./src/elements/Table/TableRow.tsx","webpack://reactSpectre/./src/elements/Table/Table.tsx","webpack://reactSpectre/./src/experimentals/Autocomplete/FormAutocomplete.tsx","webpack://reactSpectre/./src/experimentals/Autocomplete/FormAutocompleteInput.tsx","webpack://reactSpectre/./src/experimentals/Autocomplete/util.tsx","webpack://reactSpectre/./src/experimentals/Autocomplete/Autocomplete.tsx","webpack://reactSpectre/./src/experimentals/Calendar/util.ts","webpack://reactSpectre/./src/experimentals/Calendar/CalendarBody.tsx","webpack://reactSpectre/./src/experimentals/Calendar/CalendarContainer.tsx","webpack://reactSpectre/./src/experimentals/Calendar/CalendarDate.tsx","webpack://reactSpectre/./src/experimentals/Calendar/CalendarHeader.tsx","webpack://reactSpectre/./src/experimentals/Calendar/CalendarNav.tsx","webpack://reactSpectre/./src/experimentals/Calendar/DateItem.tsx","webpack://reactSpectre/./src/experimentals/Calendar/Calendar.tsx","webpack://reactSpectre/./src/experimentals/Carousel/CarouselContainer.tsx","webpack://reactSpectre/./src/experimentals/Carousel/CarouselItem.tsx","webpack://reactSpectre/./src/experimentals/Carousel/CarouselLocator.tsx","webpack://reactSpectre/./src/experimentals/Carousel/CarouselNav.tsx","webpack://reactSpectre/./src/experimentals/Carousel/CarouselNavItem.tsx","webpack://reactSpectre/./src/experimentals/Carousel/Carousel.tsx","webpack://reactSpectre/./src/experimentals/Carousel/util.ts","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonAfter.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonBefore.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonImage.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonLabel.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonResizer.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/ComparisonSlider.tsx","webpack://reactSpectre/./src/experimentals/ComparisonSlider/util.ts","webpack://reactSpectre/./src/layouts/Flexbox/Column.tsx","webpack://reactSpectre/./src/layouts/Flexbox/Columns.tsx","webpack://reactSpectre/./src/layouts/Grid/Container.tsx","webpack://reactSpectre/./src/layouts/Hero/HeroBody.tsx","webpack://reactSpectre/./src/layouts/Hero/Hero.tsx","webpack://reactSpectre/./src/layouts/Hero/util.ts","webpack://reactSpectre/./src/layouts/Navbar/Navbar.tsx","webpack://reactSpectre/./src/layouts/Navbar/NavbarBrand.tsx","webpack://reactSpectre/./src/layouts/Navbar/NavbarCenter.tsx","webpack://reactSpectre/./src/layouts/Navbar/NavbarSection.tsx","webpack://reactSpectre/./src/experimentals/Filter/FilterBody.tsx","webpack://reactSpectre/./src/experimentals/Filter/FilterItem.tsx","webpack://reactSpectre/./src/experimentals/Filter/FilterNav.tsx","webpack://reactSpectre/./src/experimentals/Filter/FilterTag.tsx","webpack://reactSpectre/./src/experimentals/Filter/Filter.tsx","webpack://reactSpectre/./src/experimentals/Filter/util.ts","webpack://reactSpectre/./src/experimentals/Meter/Meter.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/OffCanvasContent.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/OffCanvasOverlay.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/OffCanvasSidebar.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/OffCanvasToggle.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/OffCanvas.tsx","webpack://reactSpectre/./src/experimentals/OffCanvas/util.ts","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxBack.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxBottomLeft.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxBottomRight.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxContent.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxFront.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxTopLeft.tsx","webpack://reactSpectre/./src/experimentals/Parallax/ParallaxTopRight.tsx","webpack://reactSpectre/./src/experimentals/Parallax/Parallax.tsx","webpack://reactSpectre/./src/experimentals/Parallax/util.ts","webpack://reactSpectre/./src/experimentals/Progress/Progress.tsx","webpack://reactSpectre/./src/experimentals/Slider/Slider.tsx","webpack://reactSpectre/./src/experimentals/Timeline/TimelineContent.tsx","webpack://reactSpectre/./src/experimentals/Timeline/TimelineIcon.tsx","webpack://reactSpectre/./src/experimentals/Timeline/TimelineItem.tsx","webpack://reactSpectre/./src/experimentals/Timeline/TimelineLeft.tsx","webpack://reactSpectre/./src/experimentals/Timeline/Timeline.tsx","webpack://reactSpectre/./src/experimentals/Timeline/util.ts","webpack://reactSpectre/./src/experimentals/Viewer360Degree/ViewerImage.tsx","webpack://reactSpectre/./src/experimentals/Viewer360Degree/ViewerSlider.tsx","webpack://reactSpectre/./src/experimentals/Viewer360Degree/Viewer360.tsx","webpack://reactSpectre/./src/experimentals/Viewer360Degree/util.ts","webpack://reactSpectre/./src/utilities/Loading/Loading.tsx","webpack://reactSpectre/./src/index.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","classes","arguments","length","arg","argType","push","Array","isArray","inner","apply","join","default","undefined","pad","Identity","ws","Const","_stepCatArray","_stepCatString","_stepCatObject","_arity","fn","this","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arrayFromIterator","iter","next","list","done","_arrayOf","slice","_cloneRegExp","pattern","RegExp","source","global","ignoreCase","multiline","sticky","unicode","_complement","f","_concat","set1","set2","idx","len1","len2","result","_containsWith","pred","x","len","_filter","_has","prop","obj","_identity","_isArguments","toString","_isArray","val","_isFunction","_isInteger","Number","isInteger","_isNumber","_isObject","_isPlaceholder","a","_isString","_isTransformer","_map","functor","_pipe","g","_pipeP","ctx","then","_quote","replace","_reduced","@@transducer/value","@@transducer/reduced","_slice","args","from","to","Math","max","min","_toISOString","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_xfBase","init","xf","_xwrap","XWrap","acc","_assign","assign","target","TypeError","output","nextKey","_checkForMethod","methodname","_curry1","f1","_curry2","f2","b","_b","_a","_curry3","f3","_c","_curryN","received","combined","argsIdx","left","combinedIdx","_dispatchable","transducer","_xall","XAll","all","input","_xany","XAny","any","_xaperture","XAperture","pos","full","store","getCopy","_xdrop","XDrop","_xdropLast","XDropLast","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","add","adjust","_idx","_list","always","and","aperture","limit","append","el","assoc","assocPath","path","thisObj","clamp","comparator","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","dissoc","dissocPath","head","tail","divide","dropWhile","empty","constructor","evolve","transformations","transformation","type","find","findIndex","findLast","findLastIndex","forEach","fromPairs","pairs","groupWith","res","nextidx","gt","gte","has","hasIn","identical","identity","ifElse","condition","onTrue","onFalse","inc","insert","elt","splice","insertAll","elts","intersperse","separator","is","Ctor","isArrayLike","String","nodeType","isNil","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","match","rx","str","mathMod","maxBy","merge","mergeAll","concat","mergeWithKey","k","minBy","modulo","multiply","nAry","negate","none","not","nth","offset","charAt","nthArg","objOf","of","once","called","or","over","map","lens","y","pair","fst","snd","paths","pathOr","pathSatisfies","propPath","pick","names","pickAll","pickBy","test","prepend","propOr","propSatisfies","props","ps","range","reduceRight","reduced","remove","start","count","regex","replacement","reverse","split","scan","set","fromIndex","toIndex","sort","sortBy","aa","bb","splitAt","index","array","splitEvery","splitWhen","prefix","subtract","Infinity","take","xs","takeLastWhile","takeWhile","tap","times","isNaN","RangeError","toPairs","toPairsIn","transpose","outerlist","innerlist","j","trim","beginRx","endRx","tryCatch","tryer","catcher","e","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","uniqWith","unless","whenFalseFn","until","update","useWith","transformers","values","vals","valuesIn","vs","view","when","whenTrueFn","where","spec","testObj","wrap","wrapper","xprod","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_clone","refFrom","refTo","deep","copy","copiedValue","valueOf","_createPartialApplicator","_equals","stackA","stackB","equals","message","entries","keysA","pop","_makeFlat","recursive","flatt","_reduce","_iterableReduce","step","symIterator","iterator","_arrayReduce","reduce","_methodReduce","_stepCat","@@transducer/init","@@transducer/step","@@transducer/result","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_xgroupBy","XGroupBy","inputs","addIndex","origFn","binary","clone","curry","drop","dropLast","dropLastWhile","filter","filterable","flatten","flip","intersectionWith","list1","list2","lookupList","filteredList","results","into","invert","invertObj","isEmpty","lastIndexOf","mapObjIndexed","mergeWith","_","_l","_r","partial","partialRight","pathEq","_path","pluck","project","propEq","propIs","reduceBy","valueFn","valueAcc","keyFn","reject","repeat","sum","takeLast","transduce","unionWith","whereEq","_flatCat","rxf","ret","preservingReduced","_indexOf","inf","indexOf","_xchain","allPass","preds","allUniq","anyPass","ap","applicative","applySpec","chain","monad","cond","arity","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","fns","context","countBy","elem","dropRepeatsWith","eqBy","eqProps","obj1","obj2","groupBy","indexBy","juxt","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","liftN","lifted","mean","median","width","partition","pipe","pipeP","product","sequence","traversable","traverse","unnest","_contains","compose","composeK","construct","difference","dropRepeats","lift","omit","_toString","seen","recur","mapPairs","repr","without","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","size","bIdx","both","complement","either","invoker","method","Function","memoize","cache","toLower","toUpper","uniqBy","appliedItem","symmetricDifference","symmetricDifferenceWith","uniq","intersection","union","R","__","@@functional/placeholder","composeP","pipeK","__assign","__rest","getOwnPropertySymbols","Icon_Icon","className","rest","external_react_default","createElement","classnames_default","attr","style","fg","bg","cursor","display","visibility","textHide","textAssistive","floatClearing","floating","position","blockCentering","margin","marginMore","marginTop","marginTopMore","marginBottom","marginBottomMore","marginLeft","marginLeftMore","marginRight","marginRightMore","marginWidth","marginWidthMore","marginHeight","marginHeightMore","padding","paddingMore","paddingTop","paddingTopMore","paddingBottom","paddingBottomMore","paddingLeft","paddingLeftMore","paddingRight","paddingRightMore","paddingWidth","paddingWidthMore","paddingHeight","paddingHeightMore","shape","textAlign","textCase","textWeight","textDecoration","textSize","textOverflow","lang","loading","loadingSize","divider","dividerVertical","dividerContent","tooltip","tooltipPosition","badge","cn","isMenuItemDivider","Divider","children","content","vertical","li","center","text-center","data-content","defaultProps","Divider_Divider","Menu_MenuBadge","MenuItem","id","link","active","onClick","external_react_","href","preventDefault","renderMenuitem","Menu_MenuItem","Menu_Menu","nav","ulProps","memo","menu-nav","contents","renderMenu","Accordion_AccordionBody","AccordionItem","header","exclusive","inputProps","icon","useIcon","hidden","htmlFor","Accordion_AccordionItem","Accordion_Accordion","menus","menu","renderAccordion","AvatarIcon","alt","Avatar_AvatarIcon","Avatar_AvatarPresence","presence","Avatar","initial","src","data-initial","Avatar_Avatar","Button_ButtonWrapper","Button_Button","color","circle","blockButton","inputGroup","clearButton","actionButton","Button_ButtonGroup","block","btn-group-block","BarItem","small","Bar_BarItem","Bar","slider","items","bar-sm","bar-slider","role","Bar_Bar","BreadcrumbItem","Breadcrumb_BreadcrumbItem","Breadcrumb_Breadcrumb","renderBreadcrumb","Card_CardBody","Card_CardFooter","Card_CardHeader","Card_CardImage","Card_CardSubtitle","Card_CardTitle","Card_Card","button","title","isCardItemHeader","subtitle","renderCard","Chip_ChipWrapper","Chip_Chip","clear","avatar","onClearClick","renderChip","Dropdown","right","initialValue","dropdown-right","tabIndex","onMenuClick","renderDropdown","Dropdown_Dropdown","Empty_EmptyAction","Empty_EmptyIcon","Empty_EmptySubtitle","Empty_EmptyTitle","Empty_Empty","iconType","action","Modal_ModalBody","Modal_ModalContainer","Modal_ModalFooter","Modal_ModalHeader","Modal_ModalOverlay","aria-label","Modal_ModalTitle","Modal_Modal","footer","renderModal","NavItem","Nav_Nav","Nav_NavItem","activeId","renderNav","PaginationItem","current","label","disabled","linkProp","Pagination_PaginationItem","Pagination_PaginationTitleItem","page-prev","page-next","Pagination","hasPaginationTitle","prev","total","each","safeLabel","skip","previous","page","end","calculateStartAndEnd","pages","row","renderPagination","Pagination_Pagination","Panel_PanelBody","Panel_PanelFooter","Panel_PanelHeader","Panel_PanelNav","Panel_PanelTitle","Panel","headerClass","Panel_Panel","Popover_PopoverContainer","Popover_Popover","renderPopover","Step_StepItem","Step_Step","renderStep","Tab_TabAction","Tab_TabItem","badgeAttr","Tab_Tab","tab-block","renderTab","Tile_TileAction","Tile_TileContent","Tile_TileIcon","Tile_TileSubtitle","Tile_TileTitle","Tile","tile-centered","compact","renderTile","Tile_Tile","TableSortDirection","Toast_Toast","handleClearClick","renderToast","Tooltip_Tooltip","text","data-tooltip","Form_Form","horizontal","form-horizontal","Form_FormIcon","Form_FormCheckbox","inline","form-inline","Form_FormGroup","Form_FormInput","formSize","state","placeholder","Form_FormInputHint","Form_FormLabel","Form_FormRadio","Form_FormSelect","Form_FormSwitch","Form_FormTextarea","Form_HasIcon","Form_InputGroup","Form_InputGroupAddon","Label_Label","rounded","label-rounded","isTableCloumn","headingProps","Table_TableBody","Table_TableData","Table_TableHeader","Table_TableHeading","sortDirection","ASC","Table_TableRow","renderTableContent","columns","data","onRowClick","column","reactKey","renderTableHeader","datum","cellData","decorator","dataCellDecorator","renderTableBody","Table","striped","_d","hover","_e","scroll","table-striped","table-hover","table-scroll","Table_Table","Autocomplete_FormAutocomplete","onFocus","onBlur","Autocomplete_FormAutocompleteInput","is-focused","delimiter","mark","search","Autocomplete","selected","suggests","onChange","onSelected","img","word","handleSelect","Autocomplete_Autocomplete","startOfCalendarWeek","ramda","external_date_fns_","endOfCalendarWeek","generateCalendarData","options","date","same","before","isBeforeMonth","isAfterMonth","foundSameDay","foundBetween","inclusivity","includes","isBeforeEqual","isAfterEqual","isBetween","rangeStart","rangeEnd","Calendar_CalendarBody","Calendar_CalendarContainer","Calendar_CalendarDate","Calendar_CalendarHeader","Calendar_CalendarNav","Calendar_DateItem","today","date-today","Calendar_Calendar","calendar-lg","lg","weekdays","onDateClick","formatDate","toDateString","prev-month","current-month","next-month","calendar-range","range-start","range-end","renderCalendar","Carousel_CarouselContainer","Carousel_CarouselItem","Carousel_CarouselLocator","Carousel_CarouselNav","Carousel_CarouselNavItem","Carousel","slides","slide","checked","renderCarousel","Carousel_Carousel","ComparisonSlider_ComparisonAfter","ComparisonSlider_ComparisonBefore","ComparisonImage","ComparisonSlider_ComparisonImage","ComparisonSlider_ComparisonLabel","ComparisonSlider_ComparisonResizer","readOnly","ComparisonSlider_ComparisonSlider","renderComparisonSlider","Flexbox_Column","sm","md","xl","autoWidth","autoWidthXl","autoWidthLg","autoWidthMd","autoWidthSm","autoWidthXs","Flexbox_Columns","gapless","oneline","col-gapless","col-oneline","Grid_Container","Hero_HeroBody","Hero_Hero","renderHero","Navbar_Navbar","Navbar_NavbarBrand","Navbar_NavbarCenter","Navbar_NavbarSection","Filter_FilterBody","Filter_FilterItem","Filter_FilterNav","Filter_FilterTag","Filter_Filter","tags","tag","data-tag","renderFilter","Meter","Meter_Meter","OffCanvas_OffCanvasContent","OffCanvas_OffCanvasOverlay","OffCanvas_OffCanvasSidebar","OffCanvas_OffCanvasToggle","sidebarId","OffCanvas_OffCanvas","sidebarContent","renderOffCanvas","Parallax_ParallaxBack","Parallax_ParallaxBottomLeft","Parallax_ParallaxBottomRight","Parallax_ParallaxContent","Parallax_ParallaxFront","Parallax_ParallaxTopLeft","Parallax_ParallaxTopRight","Parallax_Parallax","renderParallax","Progress","Progress_Progress","Slider","Slider_Slider","Timeline_TimelineContent","Timeline_TimelineIcon","icon-lg","Timeline_TimelineItem","Timeline_TimelineLeft","Timeline_Timeline","timelines","renderTimeline","Viewer360Degree_ViewerImage","image","backgroundImage","Viewer360Degree_ViewerSlider","Viewer360Degree_Viewer360","renderViewer360","Loading","large","Loading_Loading","__webpack_exports__"],"mappings":"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E,SACArP,UACAC,OACAC,aACAkW,cACAhW,kBACAK,UACAC,cACAG,UACAyO,QACAC,YACAC,iBACA6G,eACAhC,mBACAvT,aACA2W,UACA1W,SACAuT,QACAC,WACAlH,UACApM,UACAwO,UACApO,QACAC,aACAC,YACAC,iBACAmO,WACAC,QACAnO,WACAC,aACAgT,WACA9S,aACAG,MACAC,OACAC,OACAC,SACAvB,QACAwB,aACAC,YACAC,UACAI,OACAkS,WACArC,WACAhY,QACAoI,UACAG,aACAyV,gBACAzI,oBACA9M,eACAoN,QACAC,UACAC,aACAqH,WACAzU,MACAE,eACAmN,WACAhN,SACAvP,QACA6gB,QACArR,QACAU,UACA3F,QACAiS,eACAhd,UACA6S,QACA4O,aACAC,YACAC,YACAoB,QACAnB,SACAhR,MACAC,OACA+B,OACA9B,YACAE,iBACAiM,iBACAhM,SACAG,WACAnL,OACAoL,SACAyQ,QACAC,UACAuC,WACAhT,SACAC,YACA2L,aACAzL,gBACAvL,OACAyL,SACAC,UACAC,YACAC,QACAC,UACAC,QACAC,OACAC,OACAG,UACAC,SACAC,MACAyQ,QACAxQ,QACAE,MACAC,QACAI,QACAuK,WACAC,gBACA0E,aACA5V,QACAmR,UACArK,UACAC,iBACAE,QACAE,WACAC,UACAyO,QACAmD,MAz0BA,WACA,OAAA1C,GAAApiB,MAAAa,KAAAoT,GAAAzU,aAy0BAoiB,SACAzE,SACA/J,WACAyO,WACAzE,WACA5Z,QACA6Z,UACAC,UACAjK,UACAC,iBACAC,SACAE,SACA4G,UACAkD,YACA7J,eACAC,WACAgK,UACA/J,UACAgK,UACA3Y,WACAgP,WACAE,QACA2N,YACA1N,OACArS,SACAwS,QACAC,UACAN,SACAS,WACAG,cACAC,aACAE,YACA4I,OACAwG,uBACAC,2BACAxX,QACAqI,QACA2I,YACAzI,iBACAC,aACAC,OACApC,QACAqC,SACAyO,WACAtO,WACAC,aACAhS,YACAsgB,WACAnG,aACAlI,aACAmM,YACA/L,QACAG,YACA9I,QACAkJ,WACAC,SA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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"date-fns\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"date-fns\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactSpectre\"] = factory(require(\"react\"), require(\"date-fns\"));\n\telse\n\t\troot[\"reactSpectre\"] = factory(root[\"react\"], root[\"date-fns\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","//  Ramda v0.21.0\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments, regardless of\n     * their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n     * equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _arrayOf = function _arrayOf() {\n        return Array.prototype.slice.call(arguments);\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n    var _functionName = function _functionName(f) {\n        // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n        var match = String(f).match(/^function (\\w*)/);\n        return match == null ? '' : match[1];\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    var _isFunction = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    var _objectAssign = function _objectAssign(target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        var idx = 1;\n        var length = arguments.length;\n        while (idx < length) {\n            var source = arguments[idx];\n            if (source != null) {\n                for (var nextKey in source) {\n                    if (_has(nextKey, source)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n            idx += 1;\n        }\n        return output;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return Number(a) + Number(b);\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return val;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * Restricts a number to be within a range.\n     *\n     * Also works for other ordered types such as Strings and Dates.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a -> a\n     * @param {Number} minimum number\n     * @param {Number} maximum number\n     * @param {Number} value to be clamped\n     * @return {Number} Returns the clamped value\n     * @example\n     *\n     *      R.clamp(1, 10, -1) // => 1\n     *      R.clamp(1, 10, 11) // => 10\n     *      R.clamp(1, 10, 4)  // => 4\n     */\n    var clamp = _curry3(function clamp(min, max, value) {\n        if (min > max) {\n            throw new Error('min must not be greater than max in clamp(min, max, value)');\n        }\n        return value < min ? min : value > max ? max : value;\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference\n     * @example\n     *\n     *      var cmp = (x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, skipping elements while the\n     * predicate function returns `true`. The predicate function is passed one\n     * argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0;\n        var len = pairs.length;\n        var out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Takes a list and returns a list of lists where each sublist's elements are\n     * all \"equal\" according to the provided equality function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.21.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [[a]]\n     * @param {Function} fn Function for determining whether two given (adjacent)\n     *        elements should be in the same group\n     * @param {Array} list The array to group. Also accepts a string, which will be\n     *        treated as a list of characters.\n     * @return {List} A list that contains sublists of equal elements,\n     *         whose concatenations is equal to the original list.\n     * @example\n     *\n     *    groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     *    // [[0], [1, 1], [2, 3, 5, 8, 13, 21]]\n     *\n     *    groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     *    // [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n     *\n     *    R.groupWith(R.eqBy(isVowel), 'aestiou')\n     *    // ['ae', 'st', 'iou']\n     */\n    var groupWith = _curry2(function (fn, list) {\n        var res = [];\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            var nextidx = idx + 1;\n            while (nextidx < len && fn(list[idx], list[nextidx])) {\n                nextidx += 1;\n            }\n            res.push(list.slice(idx, nextidx));\n            idx = nextidx;\n        }\n        return res;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var appender = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(l, r) {\n        return _assign({}, l, r);\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return _assign.apply(null, [{}].concat(list));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth(2, 'abc'); //=> 'c'\n     *      R.nth(3, 'abc'); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    // `Identity` is a functor that holds a single value, where `map` simply\n    // transforms the held value with the provided function.\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    var over = function () {\n        // `Identity` is a functor that holds a single value, where `map` simply\n        // transforms the held value with the provided function.\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            // The value returned by the getter function is first transformed with `f`,\n            // then set as the value of an `Identity`. This is then mapped over with the\n            // setter function of the lens.\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.objOf, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [\n            fst,\n            snd\n        ];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [\n            slice(0, index, array),\n            slice(index, length(array), array)\n        ];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [\n            prefix,\n            _slice(list, idx)\n        ];\n    });\n\n    /**\n     * Subtracts its second argument from its first argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return Number(a) - Number(b);\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\n     * result. If the `tryer` *does* throw, the returned function evaluates the\n     * `catcher` function and returns its result. Note that for effective\n     * composition with this function, both the `tryer` and `catcher` functions\n     * must return the same type of results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n     * @param {Function} tryer The function that may throw.\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\n     * @example\n     *\n     *      R.tryCatch(R.prop('x'), R.F, {x: true}); //=> true\n     *      R.tryCatch(R.prop('x'), R.F, null);      //=> false\n     */\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\n        return _arity(tryer.length, function () {\n            try {\n                return tryer.apply(this, arguments);\n            } catch (e) {\n                return catcher.apply(this, _concat([e], arguments));\n            }\n        });\n    });\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Takes a predicate, a transformation function, and an initial value,\n     * and returns a value of the same type as the initial value.\n     * It does so by applying the transformation until the predicate is satisfied,\n     * at which point it returns the satisfactory value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred A predicate function\n     * @param {Function} fn The iterator function\n     * @param {*} init Initial value\n     * @return {*} Final value that satisfies predicate\n     * @example\n     *\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n     */\n    var until = _curry3(function until(pred, fn, init) {\n        var val = init;\n        while (!pred(val)) {\n            val = fn(val);\n        }\n        return val;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    // `Const` is a functor that effectively ignores the function given to `map`.\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    var view = function () {\n        // `Const` is a functor that effectively ignores the function given to `map`.\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            // Using `Const` effectively ignores the setter function of the `lens`,\n            // leaving the value returned by the getter function unmodified.\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = Math.min(keys.length, values.length);\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @param {Boolean} deep Whether or not to perform deep cloning.\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo, deep) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value.valueOf());\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n                return a === b;\n            }\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n        case 'Map':\n        case 'Set':\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                return false;\n            }\n            break;\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n            break;\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                xs.push(x);\n                return xs;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function,\n     * skipping elements while the predicate function returns `true`. The predicate\n     * function is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        var results = [];\n        var idx = 0;\n        while (idx < filteredList.length) {\n            if (_containsWith(pred, filteredList[idx], lookupList)) {\n                results[results.length] = filteredList[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [\n        pickAll,\n        identity\n    ]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = (a, b) => a + b;\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Groups the elements of the list according to the result of calling\n     * the String-returning function `keyFn` on each element and reduces the elements\n     * of each group to a single value via the reducer function `valueFn`.\n     *\n     * This function is basically a more general `groupBy` function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\n     *        value. Receives two values, accumulator for a particular group and the current element.\n     * @param {*} acc The (initial) accumulator value for each group.\n     * @param {Function} keyFn The function that maps the list's element into a key.\n     * @param {Array} list The array to group.\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\n     * @see R.groupBy, R.reduce\n     * @example\n     *\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n     *      var namesByGrade = reduceToNamesBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Lucy', score: 92},\n     *                      {name: 'Drew', score: 85},\n     *                      // ...\n     *                      {name: 'Bart', score: 62}];\n     *      namesByGrade(students);\n     *      // {\n     *      //   'A': ['Lucy'],\n     *      //   'B': ['Drew']\n     *      //   // ...,\n     *      //   'F': ['Bart']\n     *      // }\n     */\n    var reduceBy = _curryN(4, [], function reduceBy(valueFn, valueAcc, keyFn, list) {\n        return _reduce(function (acc, elt) {\n            var key = keyFn(elt);\n            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n            return acc;\n        }, {}, list);\n    });\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                } else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms, otherwise\n     * `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @deprecated since v0.20.0\n     * @example\n     *\n     *      R.allUniq(['1', 1]); //=> true\n     *      R.allUniq([1, 1]);   //=> false\n     *      R.allUniq([[42], [42]]); //=> false\n     */\n    var allUniq = _curry1(function allUniq(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? curryN(Math.max(applicative.length, fn.length), function () {\n            return applicative.apply(this, arguments)(fn.apply(this, arguments));\n        }) : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Given a spec object recursively mapping properties to functions, creates a\n     * function producing an object of the same structure, by mapping each property\n     * to the result of calling its associated function with the supplied arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n     * @param {Object} spec an object recursively mapping properties to functions for\n     *        producing the values for these properties.\n     * @return {Function} A function that returns an object of the same structure\n     * as `spec', with each property set to the value returned by calling its\n     * associated function with the supplied arguments.\n     * @see R.juxt\n     * @example\n     *\n     *      var getMetrics = R.applySpec({\n     *                                      sum: R.add,\n     *                                      nested: { mul: R.multiply }\n     *                                   });\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n     */\n    var applySpec = _curry1(function applySpec(spec) {\n        spec = map(function (v) {\n            return typeof v == 'function' ? v : applySpec(v);\n        }, spec);\n        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n            var args = arguments;\n            return map(function (f) {\n                return apply(f, args);\n            }, spec);\n        });\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        var arity = reduce(max, 0, map(function (pair) {\n            return pair[0].length;\n        }, pairs));\n        return _arity(arity, function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        });\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(reduce(max, 0, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = reduceBy(function (acc, elem) {\n        return acc + 1;\n    }, 0);\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, reduceBy(function (acc, item) {\n        if (acc == null) {\n            acc = [];\n        }\n        acc.push(item);\n        return acc;\n    }, null)));\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = reduceBy(function (acc, elem) {\n        return elem;\n    }, null);\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @see R.applySpec\n     * @example\n     *\n     *      var range = R.juxt([Math.min, Math.max]);\n     *      range(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return converge(_arrayOf, fns);\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (toFunctorFn) {\n            return function (target) {\n                return map(function (focus) {\n                    return setter(focus, target);\n                }, toFunctorFn(getter(target)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift, R.ap\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Takes a predicate and a list or other \"filterable\" object and returns the\n     * pair of filterable objects of the same type of elements which do and do not\n     * satisfy, the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n     * @param {Function} pred A predicate to determine which side the element belongs to.\n     * @param {Array} filterable the list (or other filterable) to partition.\n     * @return {Array} An array, containing first the subset of elements that satisfy the\n     *         predicate, and second the subset of elements that do not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     *\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n     */\n    var partition = juxt([\n        filter,\n        reject\n    ]);\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * **Note:** The result of pipe is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      // Returns `Nothing` if the given divisor is `0`\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n     *\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return /^\\d+$/.test(k);\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * **Note:** The result of compose is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    // A simple Set type that honours R.equals semantics\n    /* globals Set */\n    /**\n       * Combines the logic for checking whether an item is a member of the set and\n       * for adding a new item to the set.\n       *\n       * @param item       The item to check or add to the Set instance.\n       * @param shouldAdd  If true, the item will be added to the set if it doesn't\n       *                   already exist.\n       * @param set        The set instance to check or add to.\n       * @return {boolean} When shouldAdd is true, this will return true when a new\n       *                   item was added otherwise false. When shouldAdd is false,\n       *                   this will return true if the item already exists, otherwise\n       *                   false.\n       */\n    // distinguish between +0 and -0\n    // these types can all utilise Set\n    // set._items['boolean'] holds a two element array\n    // representing [ falseExists, trueExists ]\n    // compare functions for reference equality\n    /* falls through */\n    // reduce the search size of heterogeneous sets by creating buckets\n    // for each type.\n    // scan through all previously applied items\n    var _Set = function () {\n        function _Set() {\n            /* globals Set */\n            this._nativeSet = typeof Set === 'function' ? new Set() : null;\n            this._items = {};\n        }\n        _Set.prototype.add = function (item) {\n            return hasOrAdd(item, true, this);\n        };\n        _Set.prototype.has = function (item) {\n            return hasOrAdd(item, false, this);\n        };\n        /**\n       * Combines the logic for checking whether an item is a member of the set and\n       * for adding a new item to the set.\n       *\n       * @param item       The item to check or add to the Set instance.\n       * @param shouldAdd  If true, the item will be added to the set if it doesn't\n       *                   already exist.\n       * @param set        The set instance to check or add to.\n       * @return {boolean} When shouldAdd is true, this will return true when a new\n       *                   item was added otherwise false. When shouldAdd is false,\n       *                   this will return true if the item already exists, otherwise\n       *                   false.\n       */\n        function hasOrAdd(item, shouldAdd, set) {\n            var type = typeof item;\n            var prevSize, newSize;\n            switch (type) {\n            case 'string':\n            case 'number':\n                // distinguish between +0 and -0\n                if (item === 0 && !set._items['-0'] && 1 / item === -Infinity) {\n                    if (shouldAdd) {\n                        set._items['-0'] = true;\n                    }\n                    return shouldAdd;\n                }\n                // these types can all utilise Set\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize > prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = {};\n                            set._items[type][item] = true;\n                        }\n                        return shouldAdd;\n                    } else if (item in set._items[type]) {\n                        return !shouldAdd;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][item] = true;\n                        }\n                        return shouldAdd;\n                    }\n                }\n            case 'boolean':\n                // set._items['boolean'] holds a two element array\n                // representing [ falseExists, trueExists ]\n                if (type in set._items) {\n                    var bIdx = item ? 1 : 0;\n                    if (set._items[type][bIdx]) {\n                        return !shouldAdd;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type][bIdx] = true;\n                        }\n                        return shouldAdd;\n                    }\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = item ? [\n                            false,\n                            true\n                        ] : [\n                            true,\n                            false\n                        ];\n                    }\n                    return shouldAdd;\n                }\n            case 'function':\n                // compare functions for reference equality\n                if (set._nativeSet !== null) {\n                    if (shouldAdd) {\n                        prevSize = set._nativeSet.size;\n                        set._nativeSet.add(item);\n                        newSize = set._nativeSet.size;\n                        return newSize > prevSize;\n                    } else {\n                        return set._nativeSet.has(item);\n                    }\n                } else {\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = [item];\n                        }\n                        return shouldAdd;\n                    }\n                    if (!_contains(item, set._items[type])) {\n                        if (shouldAdd) {\n                            set._items[type].push(item);\n                        }\n                        return shouldAdd;\n                    }\n                }\n                return !shouldAdd;\n            case 'undefined':\n                if (set._items[type]) {\n                    return !shouldAdd;\n                } else {\n                    if (shouldAdd) {\n                        set._items[type] = true;\n                    }\n                    return shouldAdd;\n                }\n            case 'object':\n                if (item === null) {\n                    if (!set._items['null']) {\n                        if (shouldAdd) {\n                            set._items['null'] = true;\n                        }\n                        return shouldAdd;\n                    }\n                    return !shouldAdd;\n                }\n            /* falls through */\n            default:\n                // reduce the search size of heterogeneous sets by creating buckets\n                // for each type.\n                type = Object.prototype.toString.call(item);\n                if (!(type in set._items)) {\n                    if (shouldAdd) {\n                        set._items[type] = [item];\n                    }\n                    return shouldAdd;\n                }\n                // scan through all previously applied items\n                if (!_contains(item, set._items[type])) {\n                    if (shouldAdd) {\n                        set._items[type].push(item);\n                    }\n                    return shouldAdd;\n                }\n                return !shouldAdd;\n            }\n        }\n        return _Set;\n    }();\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return _isFunction(f) ? function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        } : lift(and)(f, g);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return _isFunction(f) ? function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        } : lift(or)(f, g);\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var set = new _Set();\n        var result = [];\n        var idx = 0;\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (set.add(appliedItem)) {\n                result.push(item);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Dispatches to the `concat` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = flip(invoker(1, 'concat'));\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        return uniq(_filter(flip(_contains)(lookupList), filteredList));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        allUniq: allUniq,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        applySpec: applySpec,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clamp: clamp,\n        clone: clone,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        groupWith: groupWith,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceBy: reduceBy,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        tryCatch: tryCatch,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        until: until,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n  /* eslint-env amd */\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {IconProps} from './interfaces'\n\nconst Icon: FC<IconProps> = ({className, size, type, ...rest}) => (\n  <i\n    className={cx(\n      'icon',\n      `icon-${type}`,\n      {\n        [`icon-${size}x`]: size,\n      },\n      className\n    )}\n    {...rest}\n  />\n)\n\nexport default Icon\n","import cx from 'classnames'\n\nimport {BaseProps} from './interfaces'\n\nexport function attr({\n  className,\n  style,\n\n  fg,\n  bg,\n\n  cursor,\n  display,\n  visibility,\n  textHide,\n  textAssistive,\n\n  floatClearing,\n  floating,\n  position,\n  blockCentering,\n\n  margin,\n  marginMore,\n  marginTop,\n  marginTopMore,\n  marginBottom,\n  marginBottomMore,\n  marginLeft,\n  marginLeftMore,\n  marginRight,\n  marginRightMore,\n  marginWidth,\n  marginWidthMore,\n  marginHeight,\n  marginHeightMore,\n  padding,\n  paddingMore,\n  paddingTop,\n  paddingTopMore,\n  paddingBottom,\n  paddingBottomMore,\n  paddingLeft,\n  paddingLeftMore,\n  paddingRight,\n  paddingRightMore,\n  paddingWidth,\n  paddingWidthMore,\n  paddingHeight,\n  paddingHeightMore,\n\n  shape,\n\n  textAlign,\n  textCase,\n  textWeight,\n  textDecoration,\n  textSize,\n  textOverflow,\n\n  lang,\n\n  loading,\n  loadingSize,\n\n  divider,\n  dividerVertical,\n  dividerContent,\n\n  tooltip,\n  tooltipPosition,\n\n  badge,\n}: Partial<BaseProps>) {\n  const cn = cx(className, {\n    [`text-${fg}`]: fg,\n    [`bg-${bg}`]: bg,\n\n    [`c-${cursor}`]: cursor,\n    [`d-${display}`]: display,\n    [`d-${visibility}`]: visibility,\n\n    [`text-${textHide}`]: textHide,\n    [`text-${textAssistive}`]: textAssistive,\n\n    [`${floatClearing}`]: floatClearing,\n    [`float-${floating}`]: floating,\n\n    [`p-${position}`]: position,\n    [`p-${blockCentering}`]: blockCentering,\n\n    [`s-${shape}`]: shape,\n\n    [`text-${textAlign}`]: textAlign,\n    [`text-${textCase}`]: textCase,\n    [`text-${textWeight}`]: textWeight,\n    [`text-${textDecoration}`]: textDecoration,\n    [`text-${textSize}`]: textSize,\n    [`text-${textOverflow}`]: textOverflow,\n\n    [`lang-${lang}`]: lang,\n\n    'm-1': margin,\n    'm-2': marginMore,\n    'mt-1': marginTop,\n    'mt-2': marginTopMore,\n    'mb-1': marginBottom,\n    'mb-2': marginBottomMore,\n    'ml-1': marginLeft,\n    'ml-2': marginLeftMore,\n    'mr-1': marginRight,\n    'mr-2': marginRightMore,\n    'mx-1': marginWidth,\n    'mx-2': marginWidthMore,\n    'my-1': marginHeight,\n    'my-2': marginHeightMore,\n    'p-1': padding,\n    'p-2': paddingMore,\n    'pt-1': paddingTop,\n    'pt-2': paddingTopMore,\n    'pb-1': paddingBottom,\n    'pb-2': paddingBottomMore,\n    'pl-1': paddingLeft,\n    'pl-2': paddingLeftMore,\n    'pr-1': paddingRight,\n    'pr-2': paddingRightMore,\n    'px-1': paddingWidth,\n    'px-2': paddingWidthMore,\n    'py-1': paddingHeight,\n    'py-2': paddingHeightMore,\n\n    loading,\n    [`loading-${loadingSize}`]: loadingSize,\n\n    divider: divider && !dividerVertical,\n    'divider-vert': dividerVertical,\n\n    tooltip,\n    [`tooltip-${tooltipPosition}`]: tooltipPosition,\n\n    badge,\n  })\n  const result: Partial<BaseProps> = {}\n  if (cn) {\n    result.className = cn\n  }\n  if (style) {\n    result.style = style\n  }\n  if (dividerContent) {\n    result['data-content'] = dividerContent\n  }\n  if (tooltip) {\n    result['data-tooltip'] = tooltip\n  }\n  if (badge) {\n    result['data-badge'] = badge\n  }\n  return result\n}\n","import {\n  MenuChildrenProps,\n  MenuItemChildrenProps,\n  MenuItemDividerProps,\n} from './interfaces'\n\nexport function hasMenuChildren(item: any): item is MenuChildrenProps {\n  return item.children\n}\n\nexport function isMenuItemDivider(item: any): item is MenuItemDividerProps {\n  return item.divider\n}\n\nexport function hasMenuItemChildren(item: any): item is MenuItemChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {attr} from 'utilities/attr'\n\nimport {DividerProps} from './interfaces'\n\nconst Divider: FC<DividerProps> = ({\n  children,\n  content,\n  vertical,\n  li,\n  center,\n  className,\n  ...rest\n}) =>\n  li ? (\n    <li\n      {...attr({\n        divider: true,\n        dividerVertical: vertical,\n        dividerContent: content,\n        className: cx({'text-center': center}),\n      })}\n      {...rest}\n    >\n      {children}\n    </li>\n  ) : (\n    <div\n      {...attr({\n        divider: true,\n        dividerVertical: vertical,\n        dividerContent: content,\n        className: cx({'text-center': center}),\n      })}\n      data-content={content}\n      {...rest}\n    >\n      {children}\n    </div>\n  )\n\nDivider.defaultProps = {\n  children: null,\n  vertical: false,\n  li: false,\n  center: false,\n  className: '',\n}\n\nexport default Divider\n","import React, {FC} from 'react'\n\nimport {MenuBadgeProps} from './interfaces'\n\nconst MenuBadge: FC<MenuBadgeProps> = ({content}) => {\n  if (!content) {\n    return null\n  }\n  return (\n    <div className=\"menu-badge\">\n      <span className=\"label label-primary\">{content}</span>\n    </div>\n  )\n}\n\nexport default MenuBadge\n","import React, {FC, Fragment, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {Divider} from 'utilities/Divider'\n\nimport {MenuItemProps} from './interfaces'\nimport {hasMenuItemChildren, isMenuItemDivider} from './util'\n\nimport MenuBadge from './MenuBadge'\n\nfunction renderMenuitem(p: MenuItemProps) {\n  if (isMenuItemDivider(p)) {\n    return null\n  }\n  if (hasMenuItemChildren(p)) {\n    return p.children\n  }\n  const {id, link, content, active, badge, onClick} = p\n  const handleItemClick =\n    // useCallback(\n    (e: MouseEvent<any>) => {\n      e.preventDefault()\n      if (onClick) {\n        onClick(e, id || '')\n      }\n    }\n  // ,[id])\n  return (\n    <Fragment>\n      <MenuBadge content={badge} />\n      <a href={link} className={cx({active})} onClick={handleItemClick}>\n        {content}\n      </a>\n    </Fragment>\n  )\n}\nconst MenuItem: FC<MenuItemProps> = p => {\n  const {className} = p\n  if (isMenuItemDivider(p)) {\n    return (\n      <Divider\n        className={cx('menu-item', className)}\n        content={p.divider === 'string' ? p.divider : ''}\n      />\n    )\n  }\n  return <li className={cx('menu-item', className)}>{renderMenuitem(p)}</li>\n}\nMenuItem.defaultProps = {\n  link: 'javascript:void(0)',\n}\n\nexport default MenuItem\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {MenuProps} from './interfaces'\nimport {hasMenuChildren} from './util'\n\nimport MenuItem from './MenuItem'\n\nfunction renderMenu(p: MenuProps) {\n  if (hasMenuChildren(p)) {\n    return p.children\n  }\n  return p.contents.map((content, i) => (\n    <MenuItem\n      key={content.id}\n      {...content}\n      onClick={content.onClick || p.onClick}\n    />\n  ))\n}\nconst Menu: FC<MenuProps> = p => {\n  const {className, nav, onClick, children, ...rest} = p\n  const ulProps = Object.keys(rest)\n    .filter(r => r !== 'header')\n    .reduce((memo, r) => ({...memo, [r]: rest[r]}), {})\n  return (\n    <ul\n      className={cx(\n        'menu',\n        {\n          'menu-nav': nav,\n        },\n        className\n      )}\n      {...ulProps}\n    >\n      {renderMenu(p)}\n    </ul>\n  )\n}\n\nexport default Menu\n","import React, {FC} from 'react'\n\nimport {Menu} from 'components/Menu'\n\nimport {AccordionItemProps} from './interfaces'\nimport {hasAccordionItemChildren} from './util'\n\nconst AccordionBody: FC<AccordionItemProps> = p => {\n  if (hasAccordionItemChildren(p)) {\n    return p.children\n  }\n  return <Menu nav contents={p.contents} />\n}\n\nexport default AccordionBody\n","import {AccordionChildrenProps, AccordionItemChildrenProps} from './interfaces'\n\nexport function hasAccordionChildren(\n  item: any\n): item is AccordionChildrenProps {\n  return item.children\n}\n\nexport function hasAccordionItemChildren(\n  item: any\n): item is AccordionItemChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {Icon} from 'elements/Icon'\nimport {attr} from 'utilities/attr'\n\nimport {AccordionItemProps} from './interfaces'\n\nimport AccordionBody from './AccordionBody'\n\nconst AccordionItem: FC<AccordionItemProps> = p => {\n  const {id, header, className, exclusive, useIcon} = p\n  const type = exclusive ? 'radio' : 'checkbox'\n  const inputProps = {id, type, name: `accordion-${type}`}\n  const icon = useIcon ? (\n    <Icon {...attr({marginRight: true})} type=\"arrow-right\" />\n  ) : null\n  return (\n    <div className={cx('accordion-item', className)}>\n      <input {...inputProps} id={id} hidden />\n      <label className=\"accordion-header\" htmlFor={id}>\n        {icon}\n        {header}\n      </label>\n      <div className=\"accordion-body\">\n        <AccordionBody {...p} />\n      </div>\n    </div>\n  )\n}\nAccordionItem.defaultProps = {\n  className: '',\n  exclusive: false,\n  useIcon: false,\n}\n\nexport default AccordionItem\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport AccordionItem from './AccordionItem'\nimport {AccordionProps} from './interfaces'\nimport {hasAccordionChildren} from './util'\n\nfunction renderAccordion(p: AccordionProps) {\n  if (hasAccordionChildren(p)) {\n    return p.children\n  }\n  return p.menus.map(({header, contents, ...menu}, i: number) => {\n    const key = `accordion_${i}`\n    return (\n      <AccordionItem key={key} header={header} contents={contents} {...menu} />\n    )\n  })\n}\nconst Accordion: FC<AccordionProps> = p => (\n  <div className={cx('accordion', p.className)}>{renderAccordion(p)}</div>\n)\n\nexport default Accordion\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\nimport {AvatarIconProps} from './interfaces'\n\nconst AvatarIcon: FC<AvatarIconProps> = ({className, alt, ...props}) => (\n  <img className={cx('avatar-icon', className)} alt={alt} {...props} />\n)\n\nAvatarIcon.defaultProps = {\n  alt: '',\n  className: '',\n}\n\nexport default AvatarIcon\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\nimport {AvatarPresenceProps} from './interfaces'\n\nconst AvatarPresence: FC<AvatarPresenceProps> = ({presence}) => (\n  <i className={cx('avatar-presence', presence)} />\n)\n\nexport default AvatarPresence\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport AvatarIcon from './AvatarIcon'\nimport AvatarPresence from './AvatarPresence'\nimport {AvatarProps} from './interfaces'\n\nconst Avatar: FC<AvatarProps> = ({\n  className,\n  initial,\n  src,\n  alt,\n  size,\n  icon,\n  presence,\n}) => {\n  return (\n    <figure\n      className={cx(\n        'avatar',\n        {\n          [`avatar-${size}`]: size,\n        },\n        className\n      )}\n      data-initial={initial}\n    >\n      {src ? <img src={src} alt={alt} /> : null}\n      {icon ? (\n        <AvatarIcon {...icon} />\n      ) : presence ? (\n        <AvatarPresence presence={presence} />\n      ) : null}\n    </figure>\n  )\n}\nAvatar.defaultProps = {\n  className: '',\n  initial: '',\n  icon: undefined,\n  alt: '',\n}\nexport default Avatar\n","import React, {FC} from 'react'\n\nimport {ButtonProps} from './interfaces'\nimport {isAnchorElement} from './util'\n\nconst ButtonWrapper: FC<Partial<ButtonProps>> = p => {\n  if (isAnchorElement(p)) {\n    return <a {...p}>{p.children}</a>\n  }\n\n  return <button {...p}>{p.children}</button>\n}\n\nexport default ButtonWrapper\n","import {HTMLProps} from 'react'\n\nexport function isAnchorElement(\n  item: any\n): item is HTMLProps<HTMLAnchorElement> {\n  return item.href\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ButtonProps} from './interfaces'\n\nimport ButtonWrapper from './ButtonWrapper'\n\nconst Button: FC<ButtonProps> = ({\n  children,\n  className,\n  size,\n  color,\n  loading,\n  circle,\n  blockButton,\n  inputGroup,\n  clearButton,\n  actionButton,\n  ...rest\n}) => (\n  <ButtonWrapper\n    className={cx(\n      'btn',\n      {\n        loading,\n        circle,\n        [`btn-${size}`]: size,\n        [`btn-${color}`]: color,\n        'input-group-btn': inputGroup,\n        'btn-action': actionButton,\n        'btn-block': blockButton,\n        'btn-clear': clearButton,\n      },\n      className\n    )}\n    {...rest}\n  >\n    {children}\n  </ButtonWrapper>\n)\n\nexport default Button\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ButtonGroupProps} from './interfaces'\n\nconst ButtonGroup: FC<ButtonGroupProps> = ({children, className, block}) => (\n  <div className={cx('btn-group', {'btn-group-block': block}, className)}>\n    {children}\n  </div>\n)\n\nexport default ButtonGroup\n","import React, {FC} from 'react'\n\nimport {BarItemProps} from './interfaces'\n\nimport {attr} from 'utilities/attr'\n\nconst BarItem: FC<BarItemProps> = ({small, tooltip, content, ...rest}) => (\n  <div {...attr({className: 'bar-item', tooltip})} {...rest}>\n    {small ? null : content}\n  </div>\n)\n\nBarItem.defaultProps = {\n  small: false,\n  tooltip: '',\n  content: '',\n}\n\nexport default BarItem\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button} from 'elements/Button'\n\nimport BarItem from './BarItem'\nimport {BarProps} from './interfaces'\n\nimport {attr} from 'utilities/attr'\n\nconst Bar: FC<BarProps> = ({className, small, slider, items}) => (\n  <div\n    className={cx(\n      'bar',\n      {\n        'bar-sm': small,\n        'bar-slider': slider,\n      },\n      className\n    )}\n  >\n    {items.map((item, i) => {\n      const key = `bar-item-${i}`\n      if (slider) {\n        const value = `${item.value}%`\n        Object.assign(item, {\n          role: 'progressbar',\n          style: {width: value},\n          content: (\n            <Button\n              {...attr({\n                className: 'bar-slider-btn',\n                tooltip: value,\n              })}\n            />\n          ),\n        })\n      }\n      return <BarItem key={key} small={small} {...item} />\n    })}\n  </div>\n)\nBar.defaultProps = {\n  className: '',\n  small: false,\n  slider: false,\n}\n\nexport default Bar\n","import React, {FC, MouseEvent} from 'react'\n\nimport {LinkHash} from '../../interfaces'\nimport {BreadcrumbItemProps} from './interfaces'\n\nconst BreadcrumbItem: FC<BreadcrumbItemProps> = ({link, children, onClick}) => {\n  const handleClick = (e: MouseEvent<any>) => {\n    e.preventDefault()\n    if (onClick) {\n      onClick(e)\n    }\n  }\n  return (\n    <li className=\"breadcrumb-item\">\n      <a href={link || LinkHash} onClick={handleClick}>\n        {children}\n      </a>\n    </li>\n  )\n}\nBreadcrumbItem.defaultProps = {\n  link: '#',\n}\n\nexport default BreadcrumbItem\n","import {CSSProperties, MouseEvent, ReactNode} from 'react'\n\nexport const LinkHash = '#'\n\nexport interface StyleProps {\n  className: string\n  style: CSSProperties\n}\n\nexport interface BasePartProps extends Partial<StyleProps> {\n  children: ReactNode\n}\n\nexport type MouseEventIdHandler = (e: MouseEvent<any>, id: string) => void\n","import React, {FC} from 'react'\n\nimport {BreadcrumbProps} from './interfaces'\nimport {hasBreadcrumbChildren} from './util'\n\nimport BreadcrumbItem from './BreadcrumbItem'\n\nfunction renderBreadcrumb(p: BreadcrumbProps) {\n  if (hasBreadcrumbChildren(p)) {\n    return p.children\n  }\n  return p.items.map((item, i) => <BreadcrumbItem key={item.id} {...item} />)\n}\nconst Breadcrumb: FC<BreadcrumbProps> = p => (\n  <ul className=\"breadcrumb\">{renderBreadcrumb(p)}</ul>\n)\n\nexport default Breadcrumb\n","import {BreadcrumbChildrenProps} from './interfaces'\n\nexport function hasBreadcrumbChildren(\n  item: any\n): item is BreadcrumbChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardBody: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-body', className)}>{children}</div>\n)\n\nexport default CardBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardFooter: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-footer', className)}>{children}</div>\n)\n\nexport default CardFooter\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardHeader: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-header', className)}>{children}</div>\n)\n\nexport default CardHeader\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardImage: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-image', className)}>{children}</div>\n)\n\nexport default CardImage\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardSubtitle: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-subtitle', className)}>{children}</div>\n)\n\nexport default CardSubtitle\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardPartProps} from './interfaces'\n\nconst CardTitle: FC<CardPartProps> = ({children, className}) => (\n  <div className={cx('card-title', className)}>{children}</div>\n)\n\nexport default CardTitle\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CardProps} from './interfaces'\n\nimport CardBody from './CardBody'\nimport CardFooter from './CardFooter'\nimport CardHeader from './CardHeader'\nimport CardImage from './CardImage'\nimport CardSubtitle from './CardSubtitle'\nimport CardTitle from './CardTitle'\n\nimport {hasCardChildren, isCardItemHeader} from './util'\n\nfunction renderCard(p: CardProps) {\n  if (hasCardChildren(p)) {\n    return p.children\n  }\n  return p.items.map(item => {\n    if (item.type === 'header' && isCardItemHeader(item.content)) {\n      const {button, title, subtitle} = item.content\n      return (\n        <CardHeader key={item.id}>\n          {button}\n          {title ? <CardTitle className=\"h5\">{title}</CardTitle> : null}\n          {subtitle ? (\n            <CardSubtitle className=\"text-gray\">{subtitle}</CardSubtitle>\n          ) : null}\n        </CardHeader>\n      )\n    }\n    switch (item.type) {\n      case 'image':\n        return <CardImage>{item.content}</CardImage>\n      case 'footer':\n        return <CardFooter>{item.content}</CardFooter>\n      case 'body':\n      default:\n        return <CardBody>{item.content}</CardBody>\n    }\n  })\n}\nconst Card: FC<CardProps> = p => {\n  const {children, className, ...rest} = p\n  return (\n    <div className={cx('card', className)} {...rest}>\n      {renderCard(p)}\n    </div>\n  )\n}\n\nexport default Card\n","import {CardChildrenProps, CardItemHeaderProps} from './interfaces'\n\nexport function isCardItemHeader(item: any): item is CardItemHeaderProps {\n  return item.button && item.title\n}\n\nexport function hasCardChildren(item: any): item is CardChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {ChipWrapperProps} from './interfaces'\n\nconst ChipWrapper: FC<ChipWrapperProps> = ({children, htmlFor, ...rest}) =>\n  htmlFor ? (\n    <label {...rest} htmlFor={htmlFor}>\n      {children}\n    </label>\n  ) : (\n    <span {...rest}>{children}</span>\n  )\n\nexport default ChipWrapper\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {Avatar} from 'components/Avatar'\nimport {Button} from 'elements/Button'\n\nimport {ChipProps} from './interfaces'\nimport {hasChipChildren} from './util'\n\nimport ChipWrapper from './ChipWrapper'\n\nfunction renderChip(p: ChipProps) {\n  if (hasChipChildren(p)) {\n    return p.children\n  }\n  const {clear, icon, avatar, onClearClick} = p\n  return (\n    <Fragment>\n      {icon}\n      {avatar ? <Avatar size=\"sm\" {...avatar} /> : null}\n      {p.content}\n      {clear ? <Button clearButton onClick={onClearClick} /> : null}\n    </Fragment>\n  )\n}\nconst Chip: FC<ChipProps> = p => {\n  const {htmlFor, className} = p\n  return (\n    <ChipWrapper htmlFor={htmlFor || ''} className={cx('chip', className)}>\n      {renderChip(p)}\n    </ChipWrapper>\n  )\n}\n\nexport default Chip\n","import {ChipChildrenProps} from './interfaces'\n\nexport function hasChipChildren(item: any): item is ChipChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button} from 'elements/Button'\nimport {Icon} from 'elements/Icon'\n\nimport {Menu} from '../Menu'\n\nimport {DropdownProps} from './interfaces'\nimport {hasDropdownChildren} from './util'\n\nfunction renderDropdown(p: DropdownProps) {\n  if (hasDropdownChildren(p)) {\n    return p.children\n  }\n  return <Menu onClick={p.onMenuClick} contents={p.contents} />\n}\nconst Dropdown: FC<DropdownProps> = p => {\n  const {className, active, right, initialValue, onClick} = p\n  return (\n    <div\n      className={cx(\n        'dropdown',\n        {\n          'dropdown-right': right,\n          active,\n        },\n        className\n      )}\n    >\n      <Button\n        color=\"link\"\n        className=\"dropdown-toggle\"\n        tabIndex={0}\n        onClick={onClick}\n      >\n        {initialValue} <Icon type=\"caret\" />\n      </Button>\n      {renderDropdown(p)}\n    </div>\n  )\n}\nDropdown.defaultProps = {\n  className: '',\n  active: false,\n  right: false,\n  initialValue: '',\n}\n\nexport default Dropdown\n","import {DropdownChildrenProps} from './interfaces'\n\nexport function hasDropdownChildren(item: any): item is DropdownChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {EmptyPartProps} from './interfaces'\n\nconst EmptyAction: FC<EmptyPartProps> = ({children, className}) => (\n  <div className={cx('empty-action', className)}>{children}</div>\n)\n\nexport default EmptyAction\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {EmptyPartProps} from './interfaces'\n\nconst EmptyIcon: FC<EmptyPartProps> = ({children, className}) => (\n  <div className={cx('empty-icon', className)}>{children}</div>\n)\nexport default EmptyIcon\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {EmptyPartProps} from './interfaces'\n\nconst EmptySubtitle: FC<EmptyPartProps> = ({children, className}) => (\n  <p className={cx('empty-subtitle', className)}>{children}</p>\n)\n\nexport default EmptySubtitle\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {EmptyPartProps} from './interfaces'\n\nconst EmptyTitle: FC<EmptyPartProps> = ({children, className}) => (\n  <p className={cx('empty-title', className)}>{children}</p>\n)\n\nexport default EmptyTitle\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {Icon} from 'elements/Icon'\n\nimport {EmptyProps} from './interfaces'\n\nimport EmptyAction from './EmptyAction'\nimport EmptyIcon from './EmptyIcon'\nimport EmptySubtitle from './EmptySubtitle'\nimport EmptyTitle from './EmptyTitle'\n\nconst Empty: FC<EmptyProps> = p => {\n  const {children, className, iconType, title, subtitle, action} = p\n  return (\n    <div className={cx('empty', className)}>\n      {children ? (\n        children\n      ) : (\n        <Fragment>\n          {iconType ? (\n            <EmptyIcon>\n              <Icon type={iconType} size={3} />\n            </EmptyIcon>\n          ) : null}\n          {title ? <EmptyTitle className=\"h5\">{title}</EmptyTitle> : null}\n          {subtitle ? <EmptySubtitle>{subtitle}</EmptySubtitle> : null}\n          {action ? <EmptyAction>{action}</EmptyAction> : null}\n        </Fragment>\n      )}\n    </div>\n  )\n}\n\nexport default Empty\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalPartProps} from './interfaces'\n\nconst ModalBody: FC<ModalPartProps> = ({children, className}) => (\n  <div className={cx('modal-body', className)}>\n    <div className=\"content\">{children}</div>\n  </div>\n)\n\nexport default ModalBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalPartProps} from './interfaces'\n\nconst ModalContainer: FC<ModalPartProps> = ({children, className}) => (\n  <div className={cx('modal-container', className)}>{children}</div>\n)\n\nexport default ModalContainer\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalPartProps} from './interfaces'\n\nconst ModalFooter: FC<ModalPartProps> = ({children, className}) => (\n  <div className={cx('modal-footer', className)}>{children}</div>\n)\n\nexport default ModalFooter\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalPartProps} from './interfaces'\n\nconst ModalHeader: FC<ModalPartProps> = ({children, className}) => (\n  <div className={cx('modal-header', className)}>{children}</div>\n)\n\nexport default ModalHeader\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalCloseable, ModalPartProps} from './interfaces'\n\nconst ModalOverlay: FC<ModalPartProps & ModalCloseable> = ({\n  className,\n  onClearClick,\n}) => (\n  <div\n    className={cx('modal-overlay', className)}\n    onClick={onClearClick}\n    aria-label=\"Close\"\n  />\n)\n\nexport default ModalOverlay\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ModalPartProps} from './interfaces'\n\nconst ModalTitle: FC<ModalPartProps> = ({children, className}) => (\n  <div className={cx('modal-title', className)}>{children}</div>\n)\n\nexport default ModalTitle\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button} from 'elements/Button'\nimport {attr} from 'utilities/attr'\n\nimport {ModalProps} from './interfaces'\nimport {hasModalChildren} from './util'\n\nimport ModalBody from './ModalBody'\nimport ModalContainer from './ModalContainer'\nimport ModalFooter from './ModalFooter'\nimport ModalHeader from './ModalHeader'\nimport ModalOverlay from './ModalOverlay'\nimport ModalTitle from './ModalTitle'\n\nfunction renderModal(p: ModalProps) {\n  if (hasModalChildren(p)) {\n    return p.children\n  }\n  const {title, content, footer, onClearClick} = p\n  return (\n    <Fragment>\n      <ModalOverlay onClearClick={onClearClick} />\n      <ModalContainer>\n        <ModalHeader>\n          <Button\n            clearButton\n            onClick={onClearClick}\n            {...attr({floating: 'right'})}\n          />\n          {title ? <ModalTitle className=\"h5\">{title}</ModalTitle> : null}\n        </ModalHeader>\n        {content ? <ModalBody>{content}</ModalBody> : null}\n        {footer ? <ModalFooter>{footer}</ModalFooter> : null}\n      </ModalContainer>\n    </Fragment>\n  )\n}\nconst Modal: FC<ModalProps> = p => {\n  const {active, size, className} = p\n  return (\n    <div\n      className={cx('modal', className, {\n        active,\n        [`modal-${size}`]: size,\n      })}\n    >\n      {renderModal(p)}\n    </div>\n  )\n}\n\nexport default Modal\n","import {ModalChildrenProps} from './interfaces'\n\nexport function hasModalChildren(item: any): item is ModalChildrenProps {\n  return item.children\n}\n","import React, {FC, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavItemProps} from './interfaces'\n\nimport Nav from './Nav'\n\nconst NavItem: FC<NavItemProps> = ({\n  id,\n  name,\n  items,\n  active,\n  onClick,\n  className,\n}) => {\n  const handleItemClick =\n    // useCallback(\n    (e: MouseEvent<any>) => {\n      e.preventDefault()\n      if (onClick) {\n        onClick(e, id)\n      }\n    }\n  // ,[id])\n  return (\n    <li className={cx('nav-item', className, {active})}>\n      <a href=\"#\" onClick={handleItemClick}>\n        {name}\n      </a>\n      {items && items.length ? <Nav items={items} onClick={onClick} /> : null}\n    </li>\n  )\n}\nNavItem.defaultProps = {\n  active: false,\n}\n\nexport default NavItem\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavProps} from './interfaces'\nimport {hasNavChildren} from './util'\n\nimport NavItem from './NavItem'\n\nfunction renderNav(p: NavProps) {\n  if (hasNavChildren(p)) {\n    return p.children\n  }\n  const {items, activeId, onClick} = p\n  return items.map(item => (\n    <NavItem\n      key={item.id}\n      {...item}\n      active={activeId === item.id}\n      onClick={onClick}\n    />\n  ))\n}\nconst Nav: FC<NavProps> = p => (\n  <ul className={cx('nav', p.className)}>{renderNav(p)}</ul>\n)\n\nexport default Nav\n","import {NavChildrenProps} from './interfaces'\n\nexport function hasNavChildren(item: any): item is NavChildrenProps {\n  return item.children\n}\n","import React, {FC, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {LinkHash} from '../../interfaces'\n\nimport {PaginationItemProps} from './interfaces'\n\nconst PaginationItem: FC<PaginationItemProps> = ({\n  current,\n  value,\n  label,\n  disabled,\n  onClick,\n}) => {\n  const linkProp: {tabIndex?: number} = {}\n  if (disabled) {\n    linkProp.tabIndex = -1\n  }\n  const handleLinkClick =\n    // useCallback(\n    (e: MouseEvent<any>) => {\n      e.preventDefault()\n      if (onClick) {\n        onClick(e, value)\n      }\n    }\n  // ,[value])\n  return (\n    <li\n      className={cx('page-item', {\n        disabled,\n        active: value === current,\n      })}\n    >\n      <a href={LinkHash} {...linkProp} onClick={handleLinkClick}>\n        {label}\n      </a>\n    </li>\n  )\n}\nPaginationItem.defaultProps = {\n  disabled: false,\n}\n\nexport default PaginationItem\n","import React, {FC, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {LinkHash} from '../../interfaces'\n\nimport {PaginationTitleItemProps} from './interfaces'\n\nconst PaginationTitleItem: FC<PaginationTitleItemProps> = ({\n  title,\n  subtitle,\n  current,\n  value,\n  onClick,\n}) => {\n  const handleLinkClick =\n    // useCallback(\n    (e: MouseEvent<any>) => onClick && onClick(e, value)\n  // ,[value])\n  return (\n    <li\n      className={cx('page-item', {\n        'page-prev': current > value,\n        'page-next': current < value,\n      })}\n    >\n      <a href={LinkHash} onClick={handleLinkClick}>\n        <div className=\"page-item-subtitle\">{subtitle}</div>\n        <div className=\"page-item-title h5\">{title}</div>\n      </a>\n    </li>\n  )\n}\n\nexport default PaginationTitleItem\n","import React, {FC, Fragment} from 'react'\n\nimport {PaginationProps} from './interfaces'\nimport {hasPaginationChildren, hasPaginationTitle, pages} from './util'\n\nimport PaginationItem from './PaginationItem'\nimport PaginationTitleItem from './PaginationTitleItem'\n\nfunction renderPagination(p: PaginationProps) {\n  if (hasPaginationChildren(p)) {\n    return p.children\n  }\n  const {current, onClick} = p\n  if (hasPaginationTitle(p)) {\n    const {title} = p\n    return (\n      <Fragment>\n        <PaginationTitleItem\n          title={title.prev.title}\n          subtitle={title.prev.subtitle}\n          current={current}\n          value={current - 1}\n          onClick={onClick}\n        />\n        <PaginationTitleItem\n          title={title.next.title}\n          subtitle={title.next.subtitle}\n          current={current}\n          value={current + 1}\n          onClick={onClick}\n        />\n      </Fragment>\n    )\n  }\n  const {label, total, each} = p\n  const safeLabel = label ? label : {skip: null, previous: null, next: null}\n  const list = pages(current, total, each, safeLabel.skip)\n  return (\n    <Fragment>\n      <PaginationItem\n        current={current}\n        label={safeLabel.previous}\n        disabled={current === 1}\n        value={current - 1}\n        onClick={onClick}\n      />\n      {list.map((row, i) => {\n        const key = `paging-${i}`\n        return (\n          <PaginationItem\n            key={key}\n            {...row}\n            current={current}\n            disabled={!row.value}\n            onClick={onClick}\n          />\n        )\n      })}\n      <PaginationItem\n        current={current}\n        label={safeLabel.next}\n        disabled={current === total}\n        value={current + 1}\n        onClick={onClick}\n      />\n    </Fragment>\n  )\n}\nconst Pagination: FC<PaginationProps> = p => {\n  return <ul className=\"pagination\">{renderPagination(p)}</ul>\n}\nPagination.defaultProps = {\n  label: {previous: 'Previous', next: 'Next', skip: '...'},\n  total: 1,\n  current: 1,\n  each: 1,\n}\n\nexport default Pagination\n","import {ReactNode} from 'react'\n\nimport {Page, PaginationChildrenProps, PaginationTitleProps} from './interfaces'\n\nexport function calculateStartAndEnd(\n  current: number,\n  total: number,\n  each: number\n): {\n  start: number\n  end: number\n} {\n  if (total <= 2 * each + 5) {\n    return {start: 1, end: total}\n  }\n  if (current <= each + 3) {\n    return {start: 1, end: 2 * each + 3}\n  }\n  if (current >= total - (each + 2)) {\n    return {start: total - 2 * each - 2, end: total}\n  }\n  return {start: current - each, end: current + each}\n}\n\nexport function pages(\n  current: number,\n  total: number,\n  each: number = 1,\n  skip: ReactNode = '...'\n): Page[] {\n  const page = calculateStartAndEnd(current, total, each)\n  const result: Page[] = []\n  if (page.start > 1) {\n    result.push({label: '1', value: 1})\n  }\n  if (page.start > 2) {\n    result.push({label: skip, value: 0})\n  }\n  for (let i = page.start; i <= page.end; i += 1) {\n    result.push({label: `${i}`, value: i})\n  }\n  if (page.end < total - 1) {\n    result.push({label: skip, value: 0})\n  }\n  if (page.end < total) {\n    result.push({label: `${total}`, value: total})\n  }\n  return result\n}\n\nexport function hasPaginationChildren(\n  item: any\n): item is PaginationChildrenProps {\n  return item.children\n}\n\nexport function hasPaginationTitle(item: any): item is PaginationTitleProps {\n  return item.title\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelPartProps} from './interfaces'\n\nconst PanelBody: FC<PanelPartProps> = ({children, className, ...rest}) => (\n  <div className={cx('panel-body', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default PanelBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelPartProps} from './interfaces'\n\nconst PanelFooter: FC<PanelPartProps> = ({children, className, ...rest}) => (\n  <div className={cx('panel-footer', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default PanelFooter\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelPartProps} from './interfaces'\n\nconst PanelHeader: FC<PanelPartProps> = ({children, className, ...rest}) => (\n  <div className={cx('panel-header', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default PanelHeader\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelPartProps} from './interfaces'\n\nconst PanelNav: FC<PanelPartProps> = ({children, className, ...rest}) => (\n  <div className={cx('panel-nav', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default PanelNav\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelPartProps} from './interfaces'\n\nconst PanelTitle: FC<PanelPartProps> = ({children, className, ...rest}) => (\n  <div className={cx('panel-title', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default PanelTitle\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {PanelProps} from './interfaces'\n\nimport PanelBody from './PanelBody'\nimport PanelFooter from './PanelFooter'\nimport PanelHeader from './PanelHeader'\nimport PanelNav from './PanelNav'\nimport PanelTitle from './PanelTitle'\n\nconst Panel: FC<PanelProps> = ({\n  header,\n  nav,\n  content,\n  footer,\n  headerClass,\n  className,\n  children,\n  ...rest\n}) => {\n  return (\n    <div className={cx('panel', className)} {...rest}>\n      {children ? (\n        children\n      ) : (\n        <Fragment>\n          {header ? (\n            <PanelHeader className={headerClass}>\n              {typeof header === 'string' ? (\n                <PanelTitle>{header}</PanelTitle>\n              ) : (\n                header\n              )}\n            </PanelHeader>\n          ) : null}\n          {nav ? <PanelNav>{nav}</PanelNav> : null}\n          {content ? <PanelBody>{content}</PanelBody> : null}\n          {footer ? <PanelFooter>{footer}</PanelFooter> : null}\n        </Fragment>\n      )}\n    </div>\n  )\n}\nPanel.defaultProps = {\n  header: null,\n  nav: null,\n  content: null,\n  footer: null,\n  headerClass: '',\n}\nexport default Panel\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {PopoverPartProps} from './interfaces'\n\nconst PopoverContainer: FC<PopoverPartProps> = ({children, className}) => (\n  <div className={cx('popover-container', className)}>{children}</div>\n)\n\nexport default PopoverContainer\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {PopoverProps} from './interfaces'\nimport {hasPopoverChildren} from './util'\n\nimport PopoverContainer from './PopoverContainer'\n\nfunction renderPopover(p: PopoverProps) {\n  if (hasPopoverChildren(p)) {\n    return p.children\n  }\n  return (\n    <Fragment>\n      {p.target}\n      <PopoverContainer>{p.content}</PopoverContainer>\n    </Fragment>\n  )\n}\nconst Popover: FC<PopoverProps> = (p: PopoverProps) => (\n  <div\n    className={cx('popover', p.className, {\n      [`popover-${p.position}`]: p.position,\n    })}\n  >\n    {renderPopover(p)}\n  </div>\n)\n\nexport default Popover\n","import {PopoverChildrenProps} from './interfaces'\n\nexport function hasPopoverChildren(item: any): item is PopoverChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {attr} from 'utilities/attr'\n\nimport {LinkHash} from '../../interfaces'\n\nimport {StepItemProps} from './interfaces'\n\nconst StepItem: FC<StepItemProps> = ({children, active, tooltip}) => (\n  <li className={cx('step-item', {active})}>\n    <a href={LinkHash} {...attr({tooltip})}>\n      {children}\n    </a>\n  </li>\n)\n\nexport default StepItem\n","import React, {FC} from 'react'\n\nimport {StepProps} from './interfaces'\nimport {hasStepChildren} from './util'\n\nimport StepItem from './StepItem'\n\nfunction renderStep(p: StepProps) {\n  if (hasStepChildren(p)) {\n    return p.children\n  }\n  const {items, activeId} = p\n  return items.map(item => (\n    <StepItem key={item.id} {...item} active={item.id === activeId}>\n      {item.children}\n    </StepItem>\n  ))\n}\nconst Step: FC<StepProps> = p => <ul className=\"step\">{renderStep(p)}</ul>\n\nexport default Step\n","import {StepChildrenProps} from './interfaces'\n\nexport function hasStepChildren(item: any): item is StepChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {TabActionProps} from './interfaces'\n\nconst TabAction: FC<TabActionProps> = ({children}) => (\n  <li className=\"tab-item tab-action\">{children}</li>\n)\n\nexport default TabAction\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {attr} from 'utilities/attr'\nimport {LinkHash} from '../../interfaces'\n\nimport {TabItemProps} from './interfaces'\n\nconst TabItem: FC<TabItemProps> = ({title, active, badge, onClick}) => {\n  const badgeAttr = badge ? attr({badge: `${badge}`}) : {}\n  return (\n    <li className={cx('tab-item', {active})}>\n      <a href={LinkHash} onClick={onClick} {...badgeAttr}>\n        {title}\n      </a>\n    </li>\n  )\n}\n\nexport default TabItem\n","import React, {FC, Fragment, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {TabProps} from './interfaces'\nimport {hasTabChildren} from './util'\n\nimport TabAction from './TabAction'\nimport TabItem from './TabItem'\n\nfunction renderTab(p: TabProps) {\n  if (hasTabChildren(p)) {\n    return p.children\n  }\n  const {items, activeId, onClick, action} = p\n  return (\n    <Fragment>\n      {items.map(item => {\n        const handleLinkClick =\n          // useCallback(\n          (e: MouseEvent<any>) => {\n            e.preventDefault()\n            onClick(e, item.id)\n          }\n        // , [item.id])\n        return (\n          <TabItem\n            key={item.id}\n            {...item}\n            onClick={handleLinkClick}\n            active={activeId === item.id}\n          />\n        )\n      })}\n      {action ? <TabAction>{action}</TabAction> : null}\n    </Fragment>\n  )\n}\nconst Tab: FC<TabProps> = p => (\n  <ul className={cx('tab', {'tab-block': p.block})}>{renderTab(p)}</ul>\n)\n\nexport default Tab\n","import {TabChildrenProps} from './interfaces'\n\nexport function hasTabChildren(item: any): item is TabChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TilePartProps} from './interfaces'\n\nconst TileAction: FC<TilePartProps> = ({children, className}) => (\n  <div className={cx('tile-action', className)}>{children}</div>\n)\n\nexport default TileAction\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TilePartProps} from './interfaces'\n\nconst TileContent: FC<TilePartProps> = ({children, className}) => (\n  <div className={cx('tile-content', className)}>{children}</div>\n)\n\nexport default TileContent\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TilePartProps} from './interfaces'\n\nconst TileIcon: FC<TilePartProps> = ({children, className}) => (\n  <div className={cx('tile-icon', className)}>{children}</div>\n)\n\nexport default TileIcon\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TilePartProps} from './interfaces'\n\nconst TileSubtitle: FC<TilePartProps> = ({children, className}) => (\n  <p className={cx('tile-subtitle', className)}>{children}</p>\n)\n\nexport default TileSubtitle\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TilePartProps} from './interfaces'\n\nconst TileTitle: FC<TilePartProps> = ({children, className}) => (\n  <p className={cx('tile-title', className)}>{children}</p>\n)\n\nexport default TileTitle\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {TileProps} from './interfaces'\nimport {hasTileChildren} from './util'\n\nimport TileAction from './TileAction'\nimport TileContent from './TileContent'\nimport TileIcon from './TileIcon'\nimport TileSubtitle from './TileSubtitle'\nimport TileTitle from './TileTitle'\n\nfunction renderTile(p: TileProps) {\n  if (hasTileChildren(p)) {\n    return p.children\n  }\n  const {title, subtitle, content, icon, style, action} = p\n  return (\n    <Fragment>\n      {icon ? <TileIcon>{icon}</TileIcon> : null}\n      <TileContent>\n        {title ? <TileTitle style={style}>{title}</TileTitle> : null}\n        {subtitle ? (\n          <TileSubtitle className=\"text-gray\">{subtitle}</TileSubtitle>\n        ) : null}\n        {content}\n      </TileContent>\n      {action ? <TileAction>{action}</TileAction> : null}\n    </Fragment>\n  )\n}\nconst Tile: FC<TileProps> = p => (\n  <div className={cx('tile', p.className, {'tile-centered': p.compact})}>\n    {renderTile(p)}\n  </div>\n)\n\nTile.defaultProps = {\n  compact: false,\n  title: '',\n  subtitle: '',\n  content: '',\n  icon: null,\n  action: null,\n}\n\nexport default Tile\n","import {TileChildrenProps} from './interfaces'\n\nexport function hasTileChildren(item: any): item is TileChildrenProps {\n  return item.children\n}\n","import React, {FC, Fragment, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button} from 'elements/Button'\nimport {attr} from 'utilities/attr'\n\nimport {ToastProps} from './interfaces'\nimport {hasToastChildren} from './util'\n\nfunction renderToast(p: ToastProps) {\n  if (hasToastChildren(p)) {\n    return p.children\n  }\n  const {content, title, onClearClick} = p\n  const handleClearClick = onClearClick\n    ? (e: MouseEvent) => {\n        e.preventDefault()\n        onClearClick(e)\n      }\n    : null\n  return (\n    <Fragment>\n      {handleClearClick ? (\n        <Button\n          clearButton\n          {...attr({floating: 'right'})}\n          onClick={handleClearClick}\n        />\n      ) : null}\n      {title ? <h5>{title}</h5> : null}\n      {content}\n    </Fragment>\n  )\n}\nconst Toast: FC<ToastProps> = p => {\n  const style = p.style ? {style: p.style} : {}\n  return (\n    <div\n      className={cx('toast', p.className, {\n        [`toast-${p.color}`]: p.color,\n      })}\n      {...style}\n    >\n      {renderToast(p)}\n    </div>\n  )\n}\n\nexport default Toast\n","import {MouseEventHandler, ReactNode} from 'react'\n\ninterface BaseProps {\n  className?: string\n  children?: ReactNode\n}\n\nexport type SortCompareFunc = <T>(a: T, b: T) => number\nexport type TableCellDecorator = <T, K extends keyof T>(\n  cellData: T[K],\n  reactKey: string,\n  datum: T\n) => ReactNode\n\nexport interface TableColumn<T> {\n  children: any\n  dataCellDecorator?: TableCellDecorator\n  disableSorting?: boolean\n  key: keyof T\n  sortCompareAsc?: SortCompareFunc\n  sortCompareDesc?: SortCompareFunc\n  headingProps?: TableHeadingProps\n}\n\nexport type RowClickHandler = <T>(datum: T) => void\n\nexport interface TableProps<T> extends BaseProps {\n  columns: Array<keyof T | TableColumn<T>>\n  data: T[]\n  striped?: boolean\n  hover?: boolean\n  scroll?: boolean\n  header?: boolean\n  onRowClick?: RowClickHandler\n}\n\nexport enum TableSortDirection {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nexport type TableDataProps = BaseProps\n\nexport type TableHeaderProps = BaseProps\n\nexport type TableBodyProps = BaseProps\n\nexport interface TableHeadingProps extends BaseProps {\n  onClick?: MouseEventHandler\n  sortDirection?: TableSortDirection\n}\n\nexport interface TableRowProps extends BaseProps {\n  onClick?: RowClickHandler\n}\n","import {ToastChildrenProps} from './interfaces'\n\nexport function hasToastChildren(item: any): item is ToastChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TooltipProps} from './interfaces'\n\nconst Tooltip: FC<TooltipProps> = ({children, text, position}) => (\n  <span\n    className={cx('tooltip', {\n      [`tooltip-${position}`]: position,\n    })}\n    data-tooltip={text}\n  >\n    {children}\n  </span>\n)\n\nexport default Tooltip\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormProps} from './interfaces'\n\nconst Form: FC<FormProps> = ({children, className, horizontal, ...rest}) => (\n  <form {...rest} className={cx(className, {'form-horizontal': horizontal})}>\n    {children}\n  </form>\n)\n\nexport default Form\n","import React, {FC} from 'react'\n\nimport {Icon} from 'elements/Icon'\n\nimport {attr} from 'utilities/attr'\n\nimport {FormIconProps} from './interfaces'\n\nconst FormIcon: FC<FormIconProps> = ({iconType, loading}) =>\n  iconType ? (\n    <Icon type={iconType} className=\"form-icon\" />\n  ) : (\n    <i {...attr({className: 'form-icon', loading})} />\n  )\n\nexport default FormIcon\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormLabeledProps} from './interfaces'\n\nimport FormIcon from './FormIcon'\n\nconst FormCheckbox: FC<FormLabeledProps> = ({\n  label,\n  inline,\n  size,\n  ...rest\n}) => (\n  <label\n    className={cx('form-checkbox', {\n      'form-inline': inline,\n      [`input-${size}`]: size,\n    })}\n  >\n    <input type=\"checkbox\" {...rest} />\n    <FormIcon /> {label}\n  </label>\n)\n\nexport default FormCheckbox\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormGroupProps} from './interfaces'\n\nconst FormGroup: FC<FormGroupProps> = ({children, className, color}) => (\n  <div\n    className={cx('form-group', className, {\n      [`has-${color}`]: color,\n    })}\n  >\n    {children}\n  </div>\n)\n\nexport default FormGroup\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormInputProps} from './interfaces'\n\nconst FormInput: FC<FormInputProps> = ({\n  type,\n  formSize,\n  state,\n  placeholder,\n  ...rest\n}) => (\n  <input\n    type={type}\n    className={cx('form-input', {\n      [`input-${formSize}`]: formSize,\n      [`is-${state}`]: state,\n    })}\n    placeholder={placeholder}\n    {...rest}\n  />\n)\n\nexport default FormInput\n","import React, {FC} from 'react'\n\nimport {FormInputHintProps} from './interfaces'\n\nconst FormInputHint: FC<FormInputHintProps> = ({children}) => (\n  <p className=\"form-input-hint\">{children}</p>\n)\nexport default FormInputHint\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormLabelProps} from './interfaces'\n\nconst FormLabel: FC<FormLabelProps> = ({children, className, htmlFor}) => {\n  if (htmlFor) {\n    return (\n      <label className={cx('form-label', className)} htmlFor={htmlFor}>\n        {children}\n      </label>\n    )\n  }\n  return <span className={cx('form-label', className)}>{children}</span>\n}\n\nexport default FormLabel\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormLabeledProps} from './interfaces'\n\nimport FormIcon from './FormIcon'\n\nconst FormRadio: FC<FormLabeledProps> = ({\n  label,\n  inline,\n  formSize,\n  ...rest\n}) => (\n  <label\n    className={cx('form-radio', {\n      'form-inline': inline,\n      [`input-${formSize}`]: formSize,\n    })}\n  >\n    <input type=\"radio\" {...rest} />\n    <FormIcon /> {label}\n  </label>\n)\n\nexport default FormRadio\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormSelectProps} from './interfaces'\n\nconst FormSelect: FC<FormSelectProps> = ({children, formSize, ...rest}) => (\n  <select\n    className={cx('form-select', {[`select-${formSize}`]: formSize})}\n    {...rest}\n  >\n    {children}\n  </select>\n)\n\nexport default FormSelect\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormLabeledProps} from './interfaces'\n\nimport FormIcon from './FormIcon'\n\nconst FormSwitch: FC<FormLabeledProps> = ({\n  label,\n  inline,\n  formSize,\n  ...rest\n}) => (\n  <label\n    className={cx('form-switch', {\n      'form-inline': inline,\n      [`input-${formSize}`]: formSize,\n    })}\n  >\n    <input type=\"checkbox\" {...rest} />\n    <FormIcon /> {label}\n  </label>\n)\n\nexport default FormSwitch\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormTextareaProps} from './interfaces'\n\nconst FormTextarea: FC<FormTextareaProps> = ({formSize, ...rest}) => (\n  <textarea\n    className={cx('form-input', {[`input-${formSize}`]: formSize})}\n    {...rest}\n  />\n)\n\nexport default FormTextarea\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {HasIconProps} from './interfaces'\n\nconst HasIcon: FC<HasIconProps> = ({children, position}) => (\n  <div className={cx({[`has-icon-${position}`]: position})}>{children}</div>\n)\n\nexport default HasIcon\n","import React, {FC} from 'react'\n\nimport {InputGroupProps} from './interfaces'\n\nconst InputGroup: FC<InputGroupProps> = ({children}) => (\n  <div className=\"input-group\">{children}</div>\n)\n\nexport default InputGroup\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {InputGroupAddonProps} from './interfaces'\n\nconst InputGroupAddon: FC<InputGroupAddonProps> = ({children, formSize}) => (\n  <span className={cx('input-group-addon', {[`addon-${formSize}`]: formSize})}>\n    {children}\n  </span>\n)\n\nexport default InputGroupAddon\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {LabelProps} from './interfaces'\n\nconst Label: FC<LabelProps> = ({\n  children,\n  className,\n  rounded,\n  type,\n  ...props\n}) => (\n  <span\n    className={cx(\n      'label',\n      {\n        'label-rounded': rounded,\n        [`label-${type}`]: type,\n      },\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </span>\n)\n\nexport default Label\n","import {TableColumn} from './interfaces'\n\nexport function isTableCloumn<T>(item: any): item is TableColumn<T> {\n  return item.children || item.headingProps\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TableBodyProps} from './interfaces'\n\nconst TableBody: FC<TableBodyProps> = ({className, children}) => (\n  <tbody className={cx(className)}>{children}</tbody>\n)\n\nexport default TableBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\nimport {TableDataProps} from './interfaces'\n\nconst TableData: FC<TableDataProps> = ({className, children}) => (\n  <td className={cx(className)}>{children}</td>\n)\n\nexport default TableData\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TableHeaderProps} from './interfaces'\n\nconst TableHeader: FC<TableHeaderProps> = ({className, children}) => (\n  <thead className={cx(className)}>{children}</thead>\n)\n\nexport default TableHeader\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TableHeadingProps, TableSortDirection} from './interfaces'\n\nimport {Button} from 'elements/Button'\nimport {Icon} from 'elements/Icon'\n\nconst TableHeading: FC<TableHeadingProps> = ({\n  className,\n  children,\n  onClick,\n  sortDirection,\n  ...rest\n}) => (\n  <th className={cx(className)} onClick={onClick} {...rest}>\n    {children}\n    {sortDirection && (\n      <Button color=\"link\" size=\"sm\">\n        <Icon\n          type={\n            sortDirection === TableSortDirection.ASC ? 'arrow-up' : 'arrow-down'\n          }\n        />\n      </Button>\n    )}\n  </th>\n)\n\nexport default TableHeading\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TableRowProps} from './interfaces'\n\nconst TableRow: FC<TableRowProps> = ({className, children, onClick}) => (\n  <tr onClick={onClick} className={cx(className)}>\n    {children}\n  </tr>\n)\n\nexport default TableRow\n","import React, {Fragment} from 'react'\n\nimport cx from 'classnames'\n\n// table components\nimport {TableProps} from './interfaces'\nimport {isTableCloumn} from './util'\n\nimport Body from './TableBody'\nimport Data from './TableData'\nimport Header from './TableHeader'\nimport Heading from './TableHeading'\nimport Row from './TableRow'\n\nfunction renderTableHeader<T>({header, columns}: Partial<TableProps<T>>) {\n  return (\n    header &&\n    columns && (\n      <Header>\n        <Row>\n          {columns.map((column, i) => {\n            const reactKey = `row-${i}-key-${i}`\n            if (isTableCloumn<T>(column)) {\n              const {headingProps = {}} = column\n              return (\n                <Heading key={reactKey} {...headingProps}>\n                  {column.children}\n                </Heading>\n              )\n            }\n            return <Heading key={reactKey}>{column}</Heading>\n          })}\n        </Row>\n      </Header>\n    )\n  )\n}\nfunction renderTableBody<T>({\n  columns,\n  data,\n  onRowClick,\n}: Partial<TableProps<T>>) {\n  return (\n    columns &&\n    data && (\n      <Body>\n        {data.map((datum, i) => (\n          <Row\n            key={`row-${i}`}\n            onClick={onRowClick && (() => onRowClick(datum))}\n          >\n            {columns.map((column, k) => {\n              if (isTableCloumn<T>(column)) {\n                const cellData = datum[column.key]\n                const decorator = column.dataCellDecorator\n                const key = `row-${i}-key-${k}`\n                return decorator ? (\n                  decorator(cellData, key, datum)\n                ) : (\n                  <Data key={key}>{cellData}</Data>\n                )\n              }\n              return <Data key={`row-${i}-key-${k}`}>{datum[column]}</Data>\n            })}\n          </Row>\n        ))}\n      </Body>\n    )\n  )\n}\nfunction renderTableContent<T>({\n  columns,\n  data,\n  header,\n  onRowClick,\n}: Partial<TableProps<T>>) {\n  return (\n    <Fragment>\n      {renderTableHeader<T>({header, columns})}\n      {renderTableBody({columns, data, onRowClick})}\n    </Fragment>\n  )\n}\n\nfunction Table<T>({\n  data,\n  className = '',\n  striped = true,\n  hover = true,\n  scroll = false,\n  children,\n  ...rest\n}: TableProps<T>) {\n  return (\n    <table\n      className={cx(\n        'table',\n        {\n          'table-striped': striped,\n          'table-hover': hover,\n          'table-scroll': scroll,\n        },\n        className\n      )}\n    >\n      {data ? renderTableContent({...rest, data}) : children}\n    </table>\n  )\n}\nTable.defaultProps = {\n  className: '',\n  hover: true,\n  striped: true,\n  scroll: false,\n  header: true,\n}\n\nexport default Table\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormAutocompleteProps} from './interfaces'\n\nconst FormAutocomplete: FC<FormAutocompleteProps> = ({\n  children,\n  className,\n  onFocus,\n  onBlur,\n}) => (\n  <div\n    className={cx('form-autocomplete', className)}\n    onFocus={onFocus}\n    onBlur={onBlur}\n  >\n    {children}\n  </div>\n)\n\nexport default FormAutocomplete\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {FormAutocompleteInputProps} from './interfaces'\n\nconst FormAutocompleteInput: FC<FormAutocompleteInputProps> = ({\n  children,\n  className,\n  active,\n}) => (\n  <div\n    className={cx('form-autocomplete-input', 'form-input', className, {\n      'is-focused': active,\n    })}\n  >\n    {children}\n  </div>\n)\n\nexport default FormAutocompleteInput\n","import React, {ReactNode, ReactNodeArray} from 'react'\n\nimport {SuggestProps} from './interfaces'\n\nexport const delimiter: string = '______'\n\nexport function mark(\n  target: string,\n  search: string\n): ReactNode | ReactNodeArray {\n  if (!search) {\n    return target\n  }\n  const regex: RegExp = new RegExp(`(${search})`, 'ig')\n  return target\n    .replace(regex, `${delimiter}$1${delimiter}`)\n    .replace(new RegExp(`^${delimiter}|${delimiter}$`, 'g'), '')\n    .split(delimiter)\n    .filter((row: string) => row !== '')\n    .map((row: string, i: number) => {\n      if (regex.test(row)) {\n        const key: string = `mark-${i}`\n        return <mark key={key}>{row}</mark>\n      }\n      return row\n    })\n}\n\nexport function filter(\n  word: string,\n  key: string\n): (v: SuggestProps) => boolean {\n  const regex = new RegExp(word, 'ig')\n  return function search(value) {\n    if (word === '') {\n      return true\n    }\n    return regex.test(value[key])\n  }\n}\n","import React, {FC, MouseEvent} from 'react'\n\nimport {Avatar, Chip, Menu, MenuItem, Tile} from 'components/index'\nimport {FormIcon, FormInput, HasIcon} from 'elements/index'\n\nimport {AutocompleteProps} from './interfaces'\n\nimport FormAutocomplete from './FormAutocomplete'\nimport FormAutocompleteInput from './FormAutocompleteInput'\nimport {filter, mark} from './util'\n\nconst Autocomplete: FC<AutocompleteProps> = ({\n  placeholder,\n  active,\n  selected,\n  suggests,\n  input,\n  loading,\n  onChange,\n  onFocus,\n  onBlur,\n  onClearClick,\n  onSelected,\n}) => {\n  return (\n    <FormAutocomplete onFocus={onFocus} onBlur={onBlur}>\n      <FormAutocompleteInput active={active}>\n        {selected.map(({id, name, img, initial}) => {\n          const handleClearClick =\n            // useCallback(\n            (e: MouseEvent<any>) => onClearClick(e, id)\n          // ,[id])\n          return (\n            <Chip\n              key={id}\n              avatar={{initial, src: img, alt: name}}\n              content={name}\n              clear={active}\n              onClearClick={handleClearClick}\n            />\n          )\n        })}\n\n        {loading ? (\n          <HasIcon position=\"left\">\n            <FormInput\n              type=\"text\"\n              placeholder={placeholder}\n              value={input}\n              onChange={onChange}\n            />\n            <FormIcon loading />\n          </HasIcon>\n        ) : (\n          <FormInput\n            type=\"text\"\n            placeholder={placeholder}\n            value={input}\n            onChange={onChange}\n          />\n        )}\n      </FormAutocompleteInput>\n      <Menu style={{position: active ? 'static' : 'absolute'}}>\n        {suggests\n          .filter(v => filter(input, 'name')(v))\n          .map(({id, name, img, initial}) => {\n            const handleSelect =\n              // useCallback(\n              (e: MouseEvent<any>) => {\n                e.preventDefault()\n                onSelected(e, id)\n              }\n            // ,[id])\n            return (\n              <MenuItem key={id} onClick={handleSelect}>\n                <a href=\"#\" onClick={handleSelect}>\n                  <Tile\n                    compact\n                    content={mark(name, input)}\n                    icon={\n                      <Avatar\n                        size=\"sm\"\n                        initial={initial}\n                        src={img}\n                        alt={name}\n                      />\n                    }\n                  />\n                </a>\n              </MenuItem>\n            )\n          })}\n      </Menu>\n    </FormAutocomplete>\n  )\n}\nAutocomplete.defaultProps = {\n  placeholder: 'typing here',\n  active: false,\n  loading: false,\n}\n\nexport default Autocomplete\n","import {\n  addDays,\n  differenceInCalendarDays,\n  endOfMonth,\n  endOfWeek,\n  isAfter,\n  isBefore,\n  isEqual,\n  isSameDay,\n  isSameMonth,\n  startOfMonth,\n  startOfWeek,\n} from 'date-fns'\n\nimport {compose, range} from 'ramda'\nimport {CalendarChildrenProps, CalendarOptions, DateLike} from './interfaces'\n\nexport function isBeforeMonth(date: DateLike, target: DateLike) {\n  return isBefore(date, target) && !isSameMonth(date, target)\n}\n\nexport function isAfterMonth(date: DateLike, target: DateLike) {\n  return isAfter(date, target) && !isSameMonth(date, target)\n}\n\nexport function isBetween(\n  date: DateLike,\n  from: DateLike,\n  to: DateLike,\n  inclusivity = '()'\n) {\n  if (!['()', '[]', '(]', '[)'].includes(inclusivity)) {\n    throw new Error('Inclusivity parameter must be one of (), [], (], [)')\n  }\n  const isBeforeEqual = inclusivity[0] === '['\n\n  const isAfterEqual = inclusivity[1] === ']'\n  return (\n    (isBeforeEqual\n      ? isEqual(from, date) || isBefore(from, date)\n      : isBefore(from, date)) &&\n    (isAfterEqual ? isEqual(to, date) || isAfter(to, date) : isAfter(to, date))\n  )\n}\n\nexport const startOfCalendarWeek = compose(\n  startOfWeek,\n  startOfMonth\n)\n\nexport const endOfCalendarWeek = compose(\n  endOfWeek,\n  endOfMonth\n)\n\nexport function generateCalendarData(\n  current: DateLike,\n  options?: CalendarOptions\n) {\n  const start = startOfCalendarWeek(current)\n  const end = endOfCalendarWeek(current)\n  const o = options || {\n    data: [],\n    range: [],\n  }\n  return range(0, differenceInCalendarDays(end, start) + 1).map(d => {\n    const date = addDays(start, d)\n    const same = isSameMonth(date, current)\n    const before = isBeforeMonth(date, current)\n    const after = isAfterMonth(date, current)\n    const foundSameDay = o.data.find(datum => isSameDay(date, datum.date))\n    // console.log(options && options.data)\n    const foundBetween = o.range.find(r =>\n      isBetween(date, r.start, r.end, '[]')\n    )\n    const rangeStart = foundBetween && isSameDay(date, foundBetween.start)\n    const rangeEnd = foundBetween && isSameDay(date, foundBetween.end)\n    return {\n      date,\n      same,\n      before,\n      after,\n      foundSameDay,\n      foundBetween,\n      rangeStart,\n      rangeEnd,\n    }\n  })\n}\n\nexport function hasCalendarChildren(item: any): item is CalendarChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CalendarBodyProps} from './interfaces'\n\nconst CalendarBody: FC<CalendarBodyProps> = ({children, className}) => (\n  <div className={cx('calendar-body', className)}>{children}</div>\n)\n\nexport default CalendarBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CalendarContainerProps} from './interfaces'\n\nconst CalendarContainer: FC<CalendarContainerProps> = ({\n  children,\n  className,\n}) => <div className={cx('calendar-container', className)}>{children}</div>\n\nexport default CalendarContainer\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CalendarDateProps} from './interfaces'\n\nconst CalendarDate: FC<CalendarDateProps> = ({\n  children,\n  className,\n  ...rest\n}) => (\n  <div className={cx('calendar-date', className)} {...rest}>\n    {children}\n  </div>\n)\n\nexport default CalendarDate\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CalendarHeaderProps} from './interfaces'\n\nconst CalendarHeader: FC<CalendarHeaderProps> = ({children, className}) => (\n  <div className={cx('calendar-header', className)}>{children}</div>\n)\n\nexport default CalendarHeader\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {CalendarNavProps} from './interfaces'\n\nconst CalendarNav: FC<CalendarNavProps> = ({children, className}) => {\n  return (\n    <div className={cx('calendar-nav', 'navbar', className)}>{children}</div>\n  )\n}\n\nexport default CalendarNav\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button} from 'elements/index'\n\nimport {CalendarDateItemProps} from './interfaces'\n\nconst DateItem: FC<CalendarDateItemProps> = ({\n  children,\n  active,\n  disabled,\n  badge,\n  today,\n  onClick,\n}) => (\n  <Button\n    disabled={disabled}\n    className={cx('date-item', {\n      active,\n      badge,\n      'date-today': today,\n    })}\n    onClick={onClick}\n  >\n    {children}\n  </Button>\n)\n\nexport default DateItem\n","import React, {FC, Fragment, MouseEvent} from 'react'\n\nimport cx from 'classnames'\n\nimport {Button, Icon} from 'elements/index'\nimport {attr} from 'utilities/attr'\n\nimport {CalendarProps} from './interfaces'\nimport {generateCalendarData, hasCalendarChildren} from './util'\n\nimport CalendarBody from './CalendarBody'\nimport CalendarContainer from './CalendarContainer'\nimport CalendarDate from './CalendarDate'\nimport CalendarHeader from './CalendarHeader'\nimport CalendarNav from './CalendarNav'\nimport DateItem from './DateItem'\n\nfunction renderCalendar(p: CalendarProps) {\n  if (hasCalendarChildren(p)) {\n    return p.children\n  }\n  const {nav, weekdays, current, options, onDateClick, formatDate} = p\n  return (\n    <Fragment>\n      {nav && (\n        <CalendarNav>\n          <Button\n            size=\"lg\"\n            color=\"link\"\n            actionButton\n            onClick={nav.prev.onClick}\n          >\n            {nav.prev.children || <Icon type=\"arrow-left\" />}\n          </Button>\n          <div className=\"navbar-primary\">{nav.current}</div>\n          <Button\n            size=\"lg\"\n            color=\"link\"\n            actionButton\n            onClick={nav.next.onClick}\n          >\n            {nav.next.children || <Icon type=\"arrow-right\" />}\n          </Button>\n        </CalendarNav>\n      )}\n      <CalendarContainer>\n        {weekdays && (\n          <CalendarHeader>\n            {weekdays.map(d => (\n              <CalendarDate key={d}>{d}</CalendarDate>\n            ))}\n          </CalendarHeader>\n        )}\n        <CalendarBody>\n          {generateCalendarData(current, options).map(\n            ({\n              date,\n              same,\n              before,\n              after,\n              foundSameDay,\n              foundBetween,\n              rangeStart,\n              rangeEnd,\n            }) => {\n              const handleDateClick =\n                //  useCallback(\n                (e: MouseEvent<any>) => onDateClick && onDateClick(e, date)\n              // ,[date])\n              return (\n                <CalendarDate\n                  key={date.toDateString()}\n                  {...attr({\n                    className: cx({\n                      'prev-month': before,\n                      'current-month': same,\n                      'next-month': after,\n                      'calendar-range': foundBetween,\n                      'range-start': rangeStart,\n                      'range-end': rangeEnd,\n                      disabled: before || after,\n                    }),\n                    tooltip: foundSameDay && foundSameDay.tooltip,\n                  })}\n                >\n                  <DateItem\n                    disabled={foundSameDay && foundSameDay.type === 'disabled'}\n                    active={rangeStart || rangeEnd}\n                    badge={foundSameDay && foundSameDay.type === 'badge'}\n                    today={foundSameDay && foundSameDay.type === 'today'}\n                    onClick={handleDateClick}\n                  >\n                    {formatDate && formatDate(date)}\n                  </DateItem>\n                </CalendarDate>\n              )\n            }\n          )}\n        </CalendarBody>\n      </CalendarContainer>\n    </Fragment>\n  )\n}\nconst Calendar: FC<CalendarProps> = p => (\n  <div className={cx('calendar', {'calendar-lg': p.lg})}>\n    {renderCalendar(p)}\n  </div>\n)\n\nexport default Calendar\n","import React, {FC} from 'react'\n\nimport {CarouselContainerProps} from './interfaces'\n\nconst CarouselContainer: FC<CarouselContainerProps> = ({children}) => (\n  <div className=\"carousel-container\">{children}</div>\n)\n\nexport default CarouselContainer\n","import React, {FC} from 'react'\n\nimport {Icon} from 'elements/Icon'\n\nimport {CarouselItemPaging, CarouselItemProps} from './interfaces'\n\nconst CarouselItem: FC<CarouselItemProps & CarouselItemPaging> = ({\n  src,\n  alt,\n  prev,\n  next,\n}) => (\n  <figure className=\"carousel-item\">\n    <label\n      className=\"item-prev btn btn-action btn-lg\"\n      htmlFor={`slide-${prev}`}\n    >\n      <Icon type=\"arrow-left\" />\n    </label>\n    <label\n      className=\"item-next btn btn-action btn-lg\"\n      htmlFor={`slide-${next}`}\n    >\n      <Icon type=\"arrow-right\" />\n    </label>\n    <img src={src} className=\"img-responsive rounded\" alt={alt} />\n  </figure>\n)\n\nexport default CarouselItem\n","import React, {FC} from 'react'\n\nimport {CarouselLocatorProps} from './interfaces'\n\nconst CarouselLocator: FC<CarouselLocatorProps> = p => (\n  <input\n    name=\"carousel-radio\"\n    className=\"carousel-locator\"\n    type=\"radio\"\n    hidden\n    {...p}\n  />\n)\n\nexport default CarouselLocator\n","import React, {FC} from 'react'\n\nimport {CarouselNavProps} from './interfaces'\n\nconst CarouselNav: FC<CarouselNavProps> = ({children}) => (\n  <div className=\"carousel-nav\">{children}</div>\n)\n\nexport default CarouselNav\n","import React, {FC} from 'react'\n\nimport {CarouselNavItemProps} from './interfaces'\n\nconst CarouselNavItem: FC<CarouselNavItemProps> = ({children, id}) => (\n  <label className=\"nav-item text-hide c-hand\" htmlFor={id}>\n    {children}\n  </label>\n)\n\nexport default CarouselNavItem\n","import React, {ChangeEvent, FC, Fragment} from 'react'\n\nimport {CarouselProps} from './interfaces'\nimport {hasCarouselChildren} from './util'\n\nimport CarouselContainer from './CarouselContainer'\nimport CarouselItem from './CarouselItem'\nimport CarouselLocator from './CarouselLocator'\nimport CarouselNav from './CarouselNav'\nimport CarouselNavItem from './CarouselNavItem'\n\nfunction renderCarousel(p: CarouselProps) {\n  if (hasCarouselChildren(p)) {\n    return p.children\n  }\n  const {slides, activeId, onChange} = p\n  return (\n    <Fragment>\n      {slides.map((slide, i) => {\n        const id = `slide-${i}`\n        const checked = activeId ? activeId === id : i === 0\n        const handleChange =\n          // useCallback(\n          (e: ChangeEvent<any>) => onChange(e, id)\n        // ,[id])\n        return (\n          <CarouselLocator\n            key={`${id}_locator`}\n            id={id}\n            checked={checked}\n            onChange={handleChange}\n          />\n        )\n      })}\n      <CarouselContainer>\n        {slides.map((slide, i) => (\n          <CarouselItem\n            key={`slide-${i}_item`}\n            prev={i === 0 ? slides.length - 1 : i - 1}\n            next={i === slides.length - 1 ? 0 : i + 1}\n            {...slide}\n          />\n        ))}\n      </CarouselContainer>\n      <CarouselNav>\n        {slides.map((slide, i) => {\n          const id = `slide-${i}`\n          return (\n            <CarouselNavItem key={`${id}_nav`} id={id}>\n              {i + 1}\n            </CarouselNavItem>\n          )\n        })}\n      </CarouselNav>\n    </Fragment>\n  )\n}\nconst Carousel: FC<CarouselProps> = p => (\n  <div className=\"carousel\">{renderCarousel(p)}</div>\n)\nCarousel.defaultProps = {\n  activeId: 'slide-0',\n}\n\nexport default Carousel\n","import {CarouselChildrenProps} from './interfaces'\n\nexport function hasCarouselChildren(item: any): item is CarouselChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {ComparisonAfterProps} from './interfaces'\n\nconst ComparisonAfter: FC<ComparisonAfterProps> = ({children}) => (\n  <figure className=\"comparison-after\">{children}</figure>\n)\n\nexport default ComparisonAfter\n","import React, {FC} from 'react'\n\nimport {ComparisonBeforeProps} from './interfaces'\n\nconst ComparisonBefore: FC<ComparisonBeforeProps> = ({children}) => (\n  <figure className=\"comparison-before\">{children}</figure>\n)\n\nexport default ComparisonBefore\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ComparisonImageProps} from './interfaces'\n\nconst ComparisonImage: FC<ComparisonImageProps> = ({\n  src,\n  alt,\n  className,\n  ...props\n}) => (\n  <img src={src} className={cx('rounded', className)} alt={alt} {...props} />\n)\nComparisonImage.defaultProps = {\n  alt: '',\n  className: '',\n}\n\nexport default ComparisonImage\n","import React, {FC} from 'react'\n\nimport {ComparisonLabelProps} from './interfaces'\n\nconst ComparisonLabel: FC<ComparisonLabelProps> = ({children}) => (\n  <div className=\"comparison-label\">{children}</div>\n)\n\nexport default ComparisonLabel\n","import React, {FC} from 'react'\n\nconst ComparisonResizer: FC<{}> = () => (\n  <textarea className=\"comparison-resizer\" readOnly />\n)\n\nexport default ComparisonResizer\n","import React, {FC, Fragment} from 'react'\n\nimport {ComparisonSliderProps} from './interfaces'\nimport {hasComparisonSliderChildren} from './util'\n\nimport ComparisonAfter from './ComparisonAfter'\nimport ComparisonBefore from './ComparisonBefore'\nimport ComparisonImage from './ComparisonImage'\nimport ComparisonLabel from './ComparisonLabel'\nimport ComparisonResizer from './ComparisonResizer'\n\nfunction renderComparisonSlider(p: ComparisonSliderProps) {\n  if (hasComparisonSliderChildren(p)) {\n    return p.children\n  }\n  const {before, after} = p\n  return (\n    <Fragment>\n      <ComparisonBefore>\n        <ComparisonImage {...before} />\n        <ComparisonLabel>Before</ComparisonLabel>\n      </ComparisonBefore>\n      <ComparisonAfter>\n        <ComparisonImage {...after} />\n        <ComparisonLabel>After</ComparisonLabel>\n        <ComparisonResizer />\n      </ComparisonAfter>\n    </Fragment>\n  )\n}\nconst ComparisonSlider: FC<ComparisonSliderProps> = p => (\n  <div className=\"comparison-slider\">{renderComparisonSlider(p)}</div>\n)\nexport default ComparisonSlider\n","import {ComparisonSliderChildrenProps} from './interfaces'\n\nexport function hasComparisonSliderChildren(\n  item: any\n): item is ComparisonSliderChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ColumnProps} from './interfaces'\n\nconst Column: FC<ColumnProps> = ({\n  children,\n  className,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  size,\n  offset,\n  autoWidth,\n  autoWidthXl,\n  autoWidthLg,\n  autoWidthMd,\n  autoWidthSm,\n  autoWidthXs,\n  ...props\n}) => (\n  <div\n    className={cx(\n      'column',\n      {\n        [`col-xs-${xs}`]: xs,\n        [`col-sm-${sm}`]: sm,\n        [`col-md-${md}`]: md,\n        [`col-lg-${lg}`]: lg,\n        [`col-xl-${xl}`]: xl,\n        [`col-${size}`]: size,\n        [`col-${offset}-auto`]: offset,\n        'col-auto': autoWidth,\n        'col-xl-auto': autoWidthXl,\n        'col-lg-auto': autoWidthLg,\n        'col-md-auto': autoWidthMd,\n        'col-sm-auto': autoWidthSm,\n        'col-xs-auto': autoWidthXs,\n      },\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n)\n\nexport default Column\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ColumnsProps} from './interfaces'\n\nconst Columns: FC<ColumnsProps> = ({\n  children,\n  className,\n  gapless,\n  oneline,\n  ...rest\n}) => (\n  <div\n    className={cx('columns', className, {\n      'col-gapless': gapless,\n      'col-oneline': oneline,\n    })}\n    {...rest}\n  >\n    {children}\n  </div>\n)\n\nexport default Columns\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {ContainerProps} from './interfaces'\n\nconst Container: FC<ContainerProps> = ({\n  children,\n  className,\n  size,\n  ...props\n}) => (\n  <div\n    className={cx(\n      'container',\n      {\n        [`grid-${size}`]: size,\n      },\n      className\n    )}\n    {...props}\n  >\n    {children}\n  </div>\n)\n\nexport default Container\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {HeroBodyProps} from './interfaces'\n\nconst HeroBody: FC<HeroBodyProps> = ({children, className}) => (\n  <div className={cx('hero-body', className)}>{children}</div>\n)\n\nexport default HeroBody\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {HeroProps} from './interfaces'\nimport {hasHeroChildren} from './util'\n\nimport HeroBody from './HeroBody'\n\nfunction renderHero(p: HeroProps) {\n  if (hasHeroChildren(p)) {\n    return p.children\n  }\n  const {title, content} = p\n  return (\n    <HeroBody>\n      <h1>{title}</h1>\n      <p>{content}</p>\n    </HeroBody>\n  )\n}\nconst Hero: FC<HeroProps> = p => (\n  <div\n    className={cx('hero', p.className, {[`hero-${p.size}`]: p.size})}\n    style={p.style}\n  >\n    {renderHero(p)}\n  </div>\n)\n\nexport default Hero\n","import {HeroChildrenProps} from './interfaces'\n\nexport function hasHeroChildren(item: any): item is HeroChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavbarProps} from './interfaces'\n\nconst Navbar: FC<NavbarProps> = ({children, className}) => (\n  <header className={cx('navbar', className)}>{children}</header>\n)\n\nexport default Navbar\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavbarBrandProps} from './interfaces'\n\nconst NavbarBrand: FC<NavbarBrandProps> = ({children, className, href}) =>\n  href ? (\n    <a href={href} className={cx('navbar-brand', className)}>\n      {children}\n    </a>\n  ) : (\n    <span className={cx('navbar-brand', className)}>{children}</span>\n  )\n\nexport default NavbarBrand\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavbarCenterProps} from './interfaces'\n\nconst NavbarCenter: FC<NavbarCenterProps> = ({children, className}) => (\n  <section className={cx('navbar-center', className)}>{children}</section>\n)\n\nexport default NavbarCenter\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {NavbarSectionProps} from './interfaces'\n\nconst NavbarSection: FC<NavbarSectionProps> = ({children, className}) => (\n  <section className={cx('navbar-section', className)}>{children}</section>\n)\n\nexport default NavbarSection\n","import React, {FC} from 'react'\n\nimport {Columns} from 'layouts/index'\n\nimport {FilterBodyProps} from './interfaces'\n\nconst FilterBody: FC<FilterBodyProps> = ({children}) => (\n  <Columns className=\"filter-body\">{children}</Columns>\n)\n\nexport default FilterBody\n","import React, {FC} from 'react'\n\nimport {Column} from 'layouts/index'\n\nimport {FilterItemProps} from './interfaces'\n\nconst FilterItem: FC<FilterItemProps> = ({children, ...rest}) => (\n  <Column className=\"filter-item\" size={4} {...rest}>\n    {children}\n  </Column>\n)\n\nexport default FilterItem\n","import React, {FC} from 'react'\n\nimport {FilterNavProps} from './interfaces'\n\nconst FilterNav: FC<FilterNavProps> = ({children}) => (\n  <div className=\"filter-nav\">{children}</div>\n)\n\nexport default FilterNav\n","import React, {FC} from 'react'\n\nimport {FilterTagProps} from './interfaces'\n\nconst FilterTag: FC<FilterTagProps> = ({id, checked, onChange}) => (\n  <input\n    className=\"filter-tag\"\n    name=\"filter-radio\"\n    type=\"radio\"\n    hidden\n    id={id}\n    checked={checked}\n    onChange={onChange}\n  />\n)\n\nexport default FilterTag\n","import React, {ChangeEvent, FC, Fragment} from 'react'\n\nimport {Card, CardHeader, CardSubtitle, CardTitle, Chip} from 'components/index'\n\nimport {FilterProps} from './interfaces'\nimport {hasFilterChildren} from './util'\n\nimport FilterBody from './FilterBody'\nimport FilterItem from './FilterItem'\nimport FilterNav from './FilterNav'\nimport FilterTag from './FilterTag'\n\nfunction renderFilter(p: FilterProps) {\n  if (hasFilterChildren(p)) {\n    return p.children\n  }\n  const {tags, data, activeId, onChange} = p\n  return (\n    <Fragment>\n      {Object.keys(tags).map((key, i) => {\n        const handleChange =\n          // useCallback(\n          (e: ChangeEvent<any>) => onChange(e, key)\n        // ,[key])\n        const checked = activeId ? activeId === key : i === 0\n        return (\n          <FilterTag\n            key={`${key}_input`}\n            id={key}\n            checked={checked}\n            onChange={handleChange}\n          />\n        )\n      })}\n\n      <FilterNav>\n        {Object.keys(tags).map(key => (\n          <Chip key={`${key}_nav`} htmlFor={key}>\n            {tags[key]}\n          </Chip>\n        ))}\n      </FilterNav>\n      <FilterBody>\n        {data &&\n          data.map(({tag, title, subtitle, style}, i) => {\n            const key = `card_${i}`\n            return (\n              <FilterItem key={key} data-tag={tag} style={{padding: '0.4rem'}}>\n                <Card style={{...style, marginBottom: '0.4rem'}}>\n                  <CardHeader>\n                    <CardTitle className=\"text-bold\">{title}</CardTitle>\n                    <CardSubtitle className=\"text-gray\">\n                      {subtitle}\n                    </CardSubtitle>\n                  </CardHeader>\n                </Card>\n              </FilterItem>\n            )\n          })}\n      </FilterBody>\n    </Fragment>\n  )\n}\nconst Filter: FC<FilterProps> = p => (\n  <div className=\"filter\">{renderFilter(p)}</div>\n)\nexport default Filter\n","import {FilterChildrenProps} from './interfaces'\n\nexport function hasFilterChildren(item: any): item is FilterChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {MeterProps} from './interfaces'\n\nconst Meter: FC<MeterProps> = ({value, ...props}) => (\n  <meter className=\"meter\" value={value} {...props} />\n)\nMeter.defaultProps = {\n  min: 0,\n  max: 100,\n}\n\nexport default Meter\n","import React, {FC} from 'react'\n\nimport {OffCanvasContentProps} from './interfaces'\n\nconst OffCanvasContent: FC<OffCanvasContentProps> = ({children}) => (\n  <div className=\"off-canvas-content\">\n    <div className=\"content\">{children}</div>\n  </div>\n)\n\nexport default OffCanvasContent\n","import React, {FC} from 'react'\n\nconst OffCanvasOverlay: FC<{}> = () => (\n  <a className=\"off-canvas-overlay\" href=\"#close\">\n    close\n  </a>\n)\n\nexport default OffCanvasOverlay\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {OffCanvasSidebarProps} from './interfaces'\n\nconst OffCanvasSidebar: FC<OffCanvasSidebarProps> = ({\n  children,\n  className,\n  id,\n}) => (\n  <div id={id} className={cx('off-canvas-sidebar', className)}>\n    {children}\n  </div>\n)\n\nexport default OffCanvasSidebar\n","import React, {FC} from 'react'\n\nimport {Button} from 'elements/index'\n\nimport {OffCanvasToggleProps} from './interfaces'\n\nconst OffCanvasToggle: FC<OffCanvasToggleProps> = ({children, sidebarId}) => (\n  <Button\n    actionButton\n    color=\"primary\"\n    className=\"off-canvas-toggle\"\n    href={`#${sidebarId}`}\n  >\n    {children}\n  </Button>\n)\n\nexport default OffCanvasToggle\n","import React, {FC, Fragment} from 'react'\n\nimport {Icon} from 'elements/index'\n\nimport {OffCanvasProps} from './interfaces'\nimport {hasOffCanvasChildren} from './util'\n\nimport OffCanvasContent from './OffCanvasContent'\nimport OffCanvasOverlay from './OffCanvasOverlay'\nimport OffCanvasSidebar from './OffCanvasSidebar'\nimport OffCanvasToggle from './OffCanvasToggle'\n\nfunction renderOffCanvas(p: OffCanvasProps) {\n  if (hasOffCanvasChildren(p)) {\n    return p.children\n  }\n  const {sidebarId, sidebarContent, content} = p\n  return (\n    <Fragment>\n      <OffCanvasToggle sidebarId={sidebarId}>\n        <Icon type=\"menu\" />\n      </OffCanvasToggle>\n      <OffCanvasSidebar id={sidebarId}>{sidebarContent}</OffCanvasSidebar>\n      <OffCanvasOverlay />\n      <OffCanvasContent>{content}</OffCanvasContent>\n    </Fragment>\n  )\n}\nconst OffCanvas: FC<OffCanvasProps> = p => (\n  <div className=\"off-canvas off-canvas-sidebar-show\">{renderOffCanvas(p)}</div>\n)\n\nexport default OffCanvas\n","import {OffCanvasChildrenProps} from './interfaces'\n\nexport function hasOffCanvasChildren(\n  item: any\n): item is OffCanvasChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {ParallaxPartProps} from './interfaces'\n\nconst ParallaxBack: FC<ParallaxPartProps> = ({children}) => (\n  <div className=\"parallax-back\">{children}</div>\n)\n\nexport default ParallaxBack\n","import React, {FC} from 'react'\n\nconst ParallaxBottomLeft: FC<{}> = () => (\n  <div className=\"parallax-bottom-left\" />\n)\n\nexport default ParallaxBottomLeft\n","import React, {FC} from 'react'\n\nconst ParallaxBottomRight: FC<{}> = () => (\n  <div className=\"parallax-bottom-right\" />\n)\n\nexport default ParallaxBottomRight\n","import React, {FC} from 'react'\n\nimport {ParallaxPartProps} from './interfaces'\n\nconst ParallaxContent: FC<ParallaxPartProps> = ({children}) => (\n  <div className=\"parallax-content\">{children}</div>\n)\n\nexport default ParallaxContent\n","import React, {FC} from 'react'\n\nimport {ParallaxPartProps} from './interfaces'\n\nconst ParallaxFront: FC<ParallaxPartProps> = ({children}) => (\n  <div className=\"parallax-front\">{children}</div>\n)\n\nexport default ParallaxFront\n","import React, {FC} from 'react'\n\nconst ParallaxTopLeft: FC<{}> = () => <div className=\"parallax-top-left\" />\n\nexport default ParallaxTopLeft\n","import React, {FC} from 'react'\n\nconst ParallaxTopRight: FC<{}> = () => <div className=\"parallax-top-right\" />\n\nexport default ParallaxTopRight\n","import React, {FC, Fragment} from 'react'\n\nimport {ParallaxProps} from './interfaces'\nimport {hasParallaxChildren} from './util'\n\nimport ParallaxBack from './ParallaxBack'\nimport ParallaxBottomLeft from './ParallaxBottomLeft'\nimport ParallaxBottomRight from './ParallaxBottomRight'\nimport ParallaxContent from './ParallaxContent'\nimport ParallaxFront from './ParallaxFront'\nimport ParallaxTopLeft from './ParallaxTopLeft'\nimport ParallaxTopRight from './ParallaxTopRight'\n\nfunction renderParallax(p: ParallaxProps) {\n  if (hasParallaxChildren(p)) {\n    return p.children\n  }\n  const {src, alt, title} = p\n  return (\n    <Fragment>\n      <ParallaxTopLeft />\n      <ParallaxTopRight />\n      <ParallaxBottomLeft />\n      <ParallaxBottomRight />\n      <ParallaxContent>\n        <ParallaxFront>\n          <h2>{title}</h2>\n        </ParallaxFront>\n        <ParallaxBack>\n          <img\n            src={src}\n            className=\"img-responsive rounded\"\n            alt={alt || title}\n          />\n        </ParallaxBack>\n      </ParallaxContent>\n    </Fragment>\n  )\n}\nconst Parallax: FC<ParallaxProps> = p => (\n  <div className=\"parallax\">{renderParallax(p)}</div>\n)\n\nexport default Parallax\n","import {ParallaxChildrenProps} from './interfaces'\n\nexport function hasParallaxChildren(item: any): item is ParallaxChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {ProgressProps} from './interfaces'\n\nconst Progress: FC<ProgressProps> = ({max, ...props}) => (\n  <progress className=\"progress\" max={max} {...props} />\n)\nProgress.defaultProps = {max: 100}\n\nexport default Progress\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {SliderProps} from './interfaces'\n\nconst Slider: FC<SliderProps> = ({\n  min,\n  max,\n  value,\n  tooltip,\n  onChange,\n  ...props\n}) => (\n  <input\n    type=\"range\"\n    className={cx('slider', {tooltip})}\n    min={min}\n    max={max}\n    value={value}\n    onChange={onChange}\n    {...props}\n  />\n)\nSlider.defaultProps = {min: 0, max: 100}\n\nexport default Slider\n","import React, {FC} from 'react'\n\nimport {TimelinePartProps} from './interfaces'\n\nconst TimelineContent: FC<TimelinePartProps> = ({children}) => (\n  <div className=\"timeline-content\">{children}</div>\n)\n\nexport default TimelineContent\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {attr} from 'utilities/attr'\n\nimport {TimelineIconProps} from './interfaces'\n\nconst TimelineIcon: FC<TimelineIconProps> = ({children, id, tooltip, lg}) => (\n  <a\n    href={`#${id}`}\n    {...attr({\n      tooltip,\n      className: cx('timeline-icon', {\n        'icon-lg': lg,\n      }),\n    })}\n  >\n    {children}\n  </a>\n)\n\nexport default TimelineIcon\n","import React, {FC} from 'react'\n\nimport {TimelineItemProps} from './interfaces'\n\nconst TimelineItem: FC<TimelineItemProps> = ({children, id}) => (\n  <div className=\"timeline-item\" id={id}>\n    {children}\n  </div>\n)\n\nexport default TimelineItem\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {TimelinePartProps} from './interfaces'\n\nconst TimelineLeft: FC<TimelinePartProps> = ({children}) => (\n  <div className={cx('timeline-left')}>{children}</div>\n)\n\nexport default TimelineLeft\n","import React, {FC} from 'react'\n\nimport {\n  Tile,\n  TileAction,\n  TileSubtitle,\n  TileTitle,\n  TileContent,\n} from 'components/index'\nimport {Icon} from 'elements/Icon'\n\nimport {TimelineProps} from './interfaces'\nimport {hasTimelineChildren} from './util'\n\nimport TimelineContent from './TimelineContent'\nimport TimelineIcon from './TimelineIcon'\nimport TimelineItem from './TimelineItem'\nimport TimelineLeft from './TimelineLeft'\n\nfunction renderTimeline(p: TimelineProps) {\n  if (hasTimelineChildren(p)) {\n    return p.children\n  }\n  const {timelines} = p\n  return timelines.map(({title, content, action}, i) => {\n    const key = `timeline-${i}`\n    const first = i === 0\n    return (\n      <TimelineItem key={key} id={key}>\n        <TimelineLeft>\n          <TimelineIcon id={key} tooltip={title} lg={!first}>\n            {first ? null : <Icon type=\"check\" />}\n          </TimelineIcon>\n        </TimelineLeft>\n        <TimelineContent>\n          <Tile>\n            <TileContent>\n              <TileSubtitle>{title}</TileSubtitle>\n              {Array.isArray(content) ? (\n                content.map(c => <TileTitle>{c}</TileTitle>)\n              ) : (\n                <TileTitle>{content}</TileTitle>\n              )}\n            </TileContent>\n            {action ? <TileAction>{action}</TileAction> : null}\n          </Tile>\n        </TimelineContent>\n      </TimelineItem>\n    )\n  })\n}\nconst Timeline: FC<TimelineProps> = p => (\n  <div className=\"timeline\">{renderTimeline(p)}</div>\n)\n\nexport default Timeline\n","import {TimelineChildrenProps} from './interfaces'\n\nexport function hasTimelineChildren(item: any): item is TimelineChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {ViewerImageProps} from './interfaces'\n\nconst ViewerImage: FC<ViewerImageProps> = ({image}) => (\n  <figure\n    className=\"viewer-image\"\n    style={{\n      backgroundImage: `url('${image}')`,\n      paddingBottom: '37.5%',\n      width: '100%',\n    }}\n  />\n)\n\nexport default ViewerImage\n","import React, {FC} from 'react'\n\nimport cx from 'classnames'\n\nimport {Slider} from '../Slider'\n\nimport {ViewerSliderProps} from './interfaces'\n\nconst ViewerSlider: FC<ViewerSliderProps> = ({className, ...rest}) => (\n  <Slider className={cx('viewer-slider slider', className)} {...rest} />\n)\n\nexport default ViewerSlider\n","import React, {FC, Fragment} from 'react'\n\nimport cx from 'classnames'\n\nimport {Viewer360Props} from './interfaces'\nimport {hasViewer360Children} from './util'\n\nimport ViewerImage from './ViewerImage'\nimport ViewerSlider from './ViewerSlider'\n\nfunction renderViewer360(p: Viewer360Props) {\n  if (hasViewer360Children(p)) {\n    return p.children\n  }\n  const {slider, image} = p\n  return (\n    <Fragment>\n      <ViewerSlider {...slider} />\n      <ViewerImage image={image} />\n    </Fragment>\n  )\n}\nconst Viewer360: FC<Viewer360Props> = p => (\n  <div className={cx('viewer-360', p.className)}>{renderViewer360(p)}</div>\n)\n\nexport default Viewer360\n","import {Viewer360ChildrenProps} from './interfaces'\n\nexport function hasViewer360Children(\n  item: any\n): item is Viewer360ChildrenProps {\n  return item.children\n}\n","import React, {FC} from 'react'\n\nimport {attr} from 'utilities/attr'\n\nimport {LoadingProps} from './interfaces'\n\nconst Loading: FC<LoadingProps> = ({large, className, ...rest}) => (\n  <div\n    {...attr({loading: true, loadingSize: large ? 'lg' : undefined, className})}\n    {...rest}\n  />\n)\nLoading.defaultProps = {\n  large: false,\n  className: '',\n}\n\nexport default Loading\n","export * from './interfaces'\n\nexport * from './components'\nexport * from './elements'\nexport * from './experimentals'\nexport * from './layouts'\nexport * from './utilities'\n"],"sourceRoot":""}